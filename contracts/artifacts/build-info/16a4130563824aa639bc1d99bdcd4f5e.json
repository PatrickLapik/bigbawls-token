{
	"id": "16a4130563824aa639bc1d99bdcd4f5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BigBawlsToken.sol": {
				"content": "pragma solidity >=0.8.2 <0.9.0;\n// SPDX-License-Identifier: MIT\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"contracts/interfaces/IBigBawlsTokenError.sol\";\n\ncontract BigBawls is IERC20, IBigBawlsTokenErrors {\n    uint256 _totalSupply;\n    string private _name;\n    string private _symbol;\n\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 totalSupply_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _totalSupply = totalSupply_;\n        _balances[msg.sender] = _totalSupply;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address _account) public view returns (uint256) {\n        return _balances[_account];\n    }\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) public returns (bool) {\n        bool success = true;\n\n        if (_from != msg.sender) {\n            success = updateAllowance(_from, _to, _value);\n        }\n\n        if (success) {\n            updateBalances(_from, _to, _value);\n        }\n\n        emit Transfer(_from, _to, _value);\n\n        return success;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function _transfer(\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        if (_from == address(0)) {\n            revert InvalidSenderAddress(_from);\n        }\n\n        if (_to == address(0)) {\n            revert InvalidReceiverAddress(_to);\n        }\n\n        _update(_from, _to, _value);\n    }\n\n    function _update(\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        if (_balances[_from] < _value) {\n            revert InsufficientBalance(_from, _balances[_from], _value);\n        }\n\n        _balances[_from] -= _value;\n        _balances[_to] += _value;\n\n        emit Transfer(_from, _to, _value);\n    }\n\n    function updateAllowance(\n        address _from,\n        address _to,\n        uint256 _value\n    ) private returns (bool) {\n        if (_from == address(0)) {\n            revert InvalidSenderAddress(_from);\n        }\n\n        if (_to == address(0)) {\n            revert InvalidReceiverAddress(_to);\n        }\n\n        if (_allowances[_from][_to] < _value) {\n            revert InsufficientBalance(_from, _balances[_from], _value);\n        }\n\n        _allowances[_from][_to] -= _value;\n        return true;\n    }\n\n    function updateBalances(\n        address _from,\n        address _to,\n        uint256 _value\n    ) private returns (bool) {\n        if (_from == address(0)) {\n            revert InvalidSenderAddress(_from);\n        }\n\n        if (_to == address(0)) {\n            revert InvalidReceiverAddress(_to);\n        }\n\n        if (_balances[_from] < _value) {\n            revert InsufficientBalance(_from, _balances[_from], _value);\n        }\n\n        _balances[_from] -= _value;\n        _balances[_to] += _value;\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return _allowances[_owner][_spender];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        _approve(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n    function _approve(\n        address _owner,\n        address _spender,\n        uint256 _value\n    ) internal {\n        if (_spender == address(0)) {\n            revert InvalidSpenderAddress(_spender);\n        }\n\n        if (_owner == address(0)) {\n            revert InvalidOwnerAddress(_owner);\n        }\n        _allowances[msg.sender][_spender] = _value;\n\n        emit Approval(msg.sender, _spender, _value);\n    }\n}\n"
			},
			"contracts/interfaces/IBigBawlsTokenError.sol": {
				"content": "pragma solidity >=0.8.2 <0.9.0;\n// SPDX-License-Identifier: MIT\n\ninterface IBigBawlsTokenErrors {\n    error InvalidSenderAddress(address sender);\n\n    error InvalidReceiverAddress(address receiver);\n\n    error InvalidOwnerAddress(address approver);\n\n    error InvalidSpenderAddress(address spender);\n\n    error InsufficientBalance(address _spender, uint256 balance, uint256 required);\n\n    error InsufficientAllowances(address _owner, address _spender, uint256 allowanceBalance, uint256 required);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BigBawlsToken.sol": {
				"BigBawls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowanceBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowances",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "InvalidOwnerAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "InvalidReceiverAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "InvalidSenderAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "InvalidSpenderAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BigBawlsToken.sol\":177:4184  contract BigBawls is IERC20, IBigBawlsTokenErrors {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BigBawlsToken.sol\":439:688  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BigBawlsToken.sol\":565:570  name_ */\n  dup3\n    /* \"contracts/BigBawlsToken.sol\":557:562  _name */\n  0x01\n    /* \"contracts/BigBawlsToken.sol\":557:570  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/BigBawlsToken.sol\":590:597  symbol_ */\n  dup2\n    /* \"contracts/BigBawlsToken.sol\":580:587  _symbol */\n  0x02\n    /* \"contracts/BigBawlsToken.sol\":580:597  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/BigBawlsToken.sol\":623:635  totalSupply_ */\n  dup1\n    /* \"contracts/BigBawlsToken.sol\":608:620  _totalSupply */\n  0x00\n    /* \"contracts/BigBawlsToken.sol\":608:635  _totalSupply = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BigBawlsToken.sol\":669:681  _totalSupply */\n  sload(0x00)\n    /* \"contracts/BigBawlsToken.sol\":645:654  _balances */\n  0x03\n    /* \"contracts/BigBawlsToken.sol\":645:666  _balances[msg.sender] */\n  0x00\n    /* \"contracts/BigBawlsToken.sol\":655:665  msg.sender */\n  caller\n    /* \"contracts/BigBawlsToken.sol\":645:666  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BigBawlsToken.sol\":645:681  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BigBawlsToken.sol\":439:688  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/BigBawlsToken.sol\":177:4184  contract BigBawls is IERC20, IBigBawlsTokenErrors {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_16\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_10\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_16\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_20:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_21:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_65\n    /* \"#utility.yul\":1885:1934   */\n  tag_66\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_19\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1869:1935   */\n  tag_18\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_68\n  tag_14\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2010:2122   */\ntag_67:\n    /* \"#utility.yul\":2131:2183   */\n  tag_69\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_20\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_22:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_72\n  tag_13\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2292:2414   */\ntag_71:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_73\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_21\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_23:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_24:\n    /* \"#utility.yul\":2726:2750   */\n  tag_76\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_77:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_25:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_79\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3939   */\ntag_3:\n    /* \"#utility.yul\":3038:3044   */\n  0x00\n    /* \"#utility.yul\":3046:3052   */\n  dup1\n    /* \"#utility.yul\":3054:3060   */\n  0x00\n    /* \"#utility.yul\":3103:3105   */\n  0x60\n    /* \"#utility.yul\":3091:3100   */\n  dup5\n    /* \"#utility.yul\":3082:3089   */\n  dup7\n    /* \"#utility.yul\":3078:3101   */\n  sub\n    /* \"#utility.yul\":3074:3106   */\n  slt\n    /* \"#utility.yul\":3071:3190   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3109:3188   */\n  tag_82\n  tag_11\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3071:3190   */\ntag_81:\n    /* \"#utility.yul\":3250:3251   */\n  0x00\n    /* \"#utility.yul\":3239:3248   */\n  dup5\n    /* \"#utility.yul\":3235:3252   */\n  add\n    /* \"#utility.yul\":3229:3253   */\n  mload\n    /* \"#utility.yul\":3280:3298   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3272:3278   */\n  dup2\n    /* \"#utility.yul\":3269:3299   */\n  gt\n    /* \"#utility.yul\":3266:3383   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3302:3381   */\n  tag_84\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3266:3383   */\ntag_83:\n    /* \"#utility.yul\":3407:3481   */\n  tag_85\n    /* \"#utility.yul\":3473:3480   */\n  dup7\n    /* \"#utility.yul\":3464:3470   */\n  dup3\n    /* \"#utility.yul\":3453:3462   */\n  dup8\n    /* \"#utility.yul\":3449:3471   */\n  add\n    /* \"#utility.yul\":3407:3481   */\n  tag_22\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3397:3481   */\n  swap4\n  pop\n    /* \"#utility.yul\":3200:3491   */\n  pop\n    /* \"#utility.yul\":3551:3553   */\n  0x20\n    /* \"#utility.yul\":3540:3549   */\n  dup5\n    /* \"#utility.yul\":3536:3554   */\n  add\n    /* \"#utility.yul\":3530:3555   */\n  mload\n    /* \"#utility.yul\":3582:3600   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3574:3580   */\n  dup2\n    /* \"#utility.yul\":3571:3601   */\n  gt\n    /* \"#utility.yul\":3568:3685   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3604:3683   */\n  tag_87\n  tag_12\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3568:3685   */\ntag_86:\n    /* \"#utility.yul\":3709:3783   */\n  tag_88\n    /* \"#utility.yul\":3775:3782   */\n  dup7\n    /* \"#utility.yul\":3766:3772   */\n  dup3\n    /* \"#utility.yul\":3755:3764   */\n  dup8\n    /* \"#utility.yul\":3751:3773   */\n  add\n    /* \"#utility.yul\":3709:3783   */\n  tag_22\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3699:3783   */\n  swap3\n  pop\n    /* \"#utility.yul\":3501:3793   */\n  pop\n    /* \"#utility.yul\":3832:3834   */\n  0x40\n    /* \"#utility.yul\":3858:3922   */\n  tag_89\n    /* \"#utility.yul\":3914:3921   */\n  dup7\n    /* \"#utility.yul\":3905:3911   */\n  dup3\n    /* \"#utility.yul\":3894:3903   */\n  dup8\n    /* \"#utility.yul\":3890:3912   */\n  add\n    /* \"#utility.yul\":3858:3922   */\n  tag_25\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3848:3922   */\n  swap2\n  pop\n    /* \"#utility.yul\":3803:3932   */\n  pop\n    /* \"#utility.yul\":2930:3939   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":3945:4044   */\ntag_26:\n    /* \"#utility.yul\":3997:4003   */\n  0x00\n    /* \"#utility.yul\":4031:4036   */\n  dup2\n    /* \"#utility.yul\":4025:4037   */\n  mload\n    /* \"#utility.yul\":4015:4037   */\n  swap1\n  pop\n    /* \"#utility.yul\":3945:4044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4050:4230   */\ntag_27:\n    /* \"#utility.yul\":4098:4175   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4095:4096   */\n  0x00\n    /* \"#utility.yul\":4088:4176   */\n  mstore\n    /* \"#utility.yul\":4195:4199   */\n  0x22\n    /* \"#utility.yul\":4192:4193   */\n  0x04\n    /* \"#utility.yul\":4185:4200   */\n  mstore\n    /* \"#utility.yul\":4219:4223   */\n  0x24\n    /* \"#utility.yul\":4216:4217   */\n  0x00\n    /* \"#utility.yul\":4209:4224   */\n  revert\n    /* \"#utility.yul\":4236:4556   */\ntag_28:\n    /* \"#utility.yul\":4280:4286   */\n  0x00\n    /* \"#utility.yul\":4317:4318   */\n  0x02\n    /* \"#utility.yul\":4311:4315   */\n  dup3\n    /* \"#utility.yul\":4307:4319   */\n  div\n    /* \"#utility.yul\":4297:4319   */\n  swap1\n  pop\n    /* \"#utility.yul\":4364:4365   */\n  0x01\n    /* \"#utility.yul\":4358:4362   */\n  dup3\n    /* \"#utility.yul\":4354:4366   */\n  and\n    /* \"#utility.yul\":4385:4403   */\n  dup1\n    /* \"#utility.yul\":4375:4456   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4441:4445   */\n  0x7f\n    /* \"#utility.yul\":4433:4439   */\n  dup3\n    /* \"#utility.yul\":4429:4446   */\n  and\n    /* \"#utility.yul\":4419:4446   */\n  swap2\n  pop\n    /* \"#utility.yul\":4375:4456   */\ntag_93:\n    /* \"#utility.yul\":4503:4505   */\n  0x20\n    /* \"#utility.yul\":4495:4501   */\n  dup3\n    /* \"#utility.yul\":4492:4506   */\n  lt\n    /* \"#utility.yul\":4472:4490   */\n  dup2\n    /* \"#utility.yul\":4469:4507   */\n  sub\n    /* \"#utility.yul\":4466:4550   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4522:4540   */\n  tag_95\n  tag_27\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4466:4550   */\ntag_94:\n    /* \"#utility.yul\":4287:4556   */\n  pop\n    /* \"#utility.yul\":4236:4556   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4562:4703   */\ntag_29:\n    /* \"#utility.yul\":4611:4615   */\n  0x00\n    /* \"#utility.yul\":4634:4637   */\n  dup2\n    /* \"#utility.yul\":4626:4637   */\n  swap1\n  pop\n    /* \"#utility.yul\":4657:4660   */\n  dup2\n    /* \"#utility.yul\":4654:4655   */\n  0x00\n    /* \"#utility.yul\":4647:4661   */\n  mstore\n    /* \"#utility.yul\":4691:4695   */\n  0x20\n    /* \"#utility.yul\":4688:4689   */\n  0x00\n    /* \"#utility.yul\":4678:4696   */\n  keccak256\n    /* \"#utility.yul\":4670:4696   */\n  swap1\n  pop\n    /* \"#utility.yul\":4562:4703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4709:4802   */\ntag_30:\n    /* \"#utility.yul\":4746:4752   */\n  0x00\n    /* \"#utility.yul\":4793:4795   */\n  0x20\n    /* \"#utility.yul\":4788:4790   */\n  0x1f\n    /* \"#utility.yul\":4781:4786   */\n  dup4\n    /* \"#utility.yul\":4777:4791   */\n  add\n    /* \"#utility.yul\":4773:4796   */\n  div\n    /* \"#utility.yul\":4763:4796   */\n  swap1\n  pop\n    /* \"#utility.yul\":4709:4802   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4808:4915   */\ntag_31:\n    /* \"#utility.yul\":4852:4860   */\n  0x00\n    /* \"#utility.yul\":4902:4907   */\n  dup3\n    /* \"#utility.yul\":4896:4900   */\n  dup3\n    /* \"#utility.yul\":4892:4908   */\n  shl\n    /* \"#utility.yul\":4871:4908   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4915   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4921:5314   */\ntag_32:\n    /* \"#utility.yul\":4990:4996   */\n  0x00\n    /* \"#utility.yul\":5040:5041   */\n  0x08\n    /* \"#utility.yul\":5028:5038   */\n  dup4\n    /* \"#utility.yul\":5024:5042   */\n  mul\n    /* \"#utility.yul\":5063:5160   */\n  tag_100\n    /* \"#utility.yul\":5093:5159   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5082:5091   */\n  dup3\n    /* \"#utility.yul\":5063:5160   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5181:5220   */\n  tag_101\n    /* \"#utility.yul\":5211:5219   */\n  dup7\n    /* \"#utility.yul\":5200:5209   */\n  dup4\n    /* \"#utility.yul\":5181:5220   */\n  tag_31\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5169:5220   */\n  swap6\n  pop\n    /* \"#utility.yul\":5253:5257   */\n  dup1\n    /* \"#utility.yul\":5249:5258   */\n  not\n    /* \"#utility.yul\":5242:5247   */\n  dup5\n    /* \"#utility.yul\":5238:5259   */\n  and\n    /* \"#utility.yul\":5229:5259   */\n  swap4\n  pop\n    /* \"#utility.yul\":5302:5306   */\n  dup1\n    /* \"#utility.yul\":5292:5300   */\n  dup7\n    /* \"#utility.yul\":5288:5307   */\n  and\n    /* \"#utility.yul\":5281:5286   */\n  dup5\n    /* \"#utility.yul\":5278:5308   */\n  or\n    /* \"#utility.yul\":5268:5308   */\n  swap3\n  pop\n    /* \"#utility.yul\":4997:5314   */\n  pop\n  pop\n    /* \"#utility.yul\":4921:5314   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5320:5380   */\ntag_33:\n    /* \"#utility.yul\":5348:5351   */\n  0x00\n    /* \"#utility.yul\":5369:5374   */\n  dup2\n    /* \"#utility.yul\":5362:5374   */\n  swap1\n  pop\n    /* \"#utility.yul\":5320:5380   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5386:5528   */\ntag_34:\n    /* \"#utility.yul\":5436:5445   */\n  0x00\n    /* \"#utility.yul\":5469:5522   */\n  tag_104\n    /* \"#utility.yul\":5487:5521   */\n  tag_105\n    /* \"#utility.yul\":5496:5520   */\n  tag_106\n    /* \"#utility.yul\":5514:5519   */\n  dup5\n    /* \"#utility.yul\":5496:5520   */\n  tag_23\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5487:5521   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5469:5522   */\n  tag_23\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5456:5522   */\n  swap1\n  pop\n    /* \"#utility.yul\":5386:5528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5609   */\ntag_35:\n    /* \"#utility.yul\":5577:5580   */\n  0x00\n    /* \"#utility.yul\":5598:5603   */\n  dup2\n    /* \"#utility.yul\":5591:5603   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5609   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5615:5884   */\ntag_36:\n    /* \"#utility.yul\":5725:5764   */\n  tag_109\n    /* \"#utility.yul\":5756:5763   */\n  dup4\n    /* \"#utility.yul\":5725:5764   */\n  tag_34\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5786:5877   */\n  tag_110\n    /* \"#utility.yul\":5835:5876   */\n  tag_111\n    /* \"#utility.yul\":5859:5875   */\n  dup3\n    /* \"#utility.yul\":5835:5876   */\n  tag_35\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5827:5833   */\n  dup5\n    /* \"#utility.yul\":5820:5824   */\n  dup5\n    /* \"#utility.yul\":5814:5825   */\n  sload\n    /* \"#utility.yul\":5786:5877   */\n  tag_32\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5780:5784   */\n  dup3\n    /* \"#utility.yul\":5773:5878   */\n  sstore\n    /* \"#utility.yul\":5691:5884   */\n  pop\n    /* \"#utility.yul\":5615:5884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5890:5963   */\ntag_37:\n    /* \"#utility.yul\":5935:5938   */\n  0x00\n    /* \"#utility.yul\":5890:5963   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5969:6158   */\ntag_38:\n    /* \"#utility.yul\":6046:6078   */\n  tag_114\n  tag_37\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":6087:6152   */\n  tag_115\n    /* \"#utility.yul\":6145:6151   */\n  dup2\n    /* \"#utility.yul\":6137:6143   */\n  dup5\n    /* \"#utility.yul\":6131:6135   */\n  dup5\n    /* \"#utility.yul\":6087:6152   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6022:6158   */\n  pop\n    /* \"#utility.yul\":5969:6158   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6164:6350   */\ntag_39:\n    /* \"#utility.yul\":6224:6344   */\ntag_117:\n    /* \"#utility.yul\":6241:6244   */\n  dup2\n    /* \"#utility.yul\":6234:6239   */\n  dup2\n    /* \"#utility.yul\":6231:6245   */\n  lt\n    /* \"#utility.yul\":6224:6344   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6295:6334   */\n  tag_120\n    /* \"#utility.yul\":6332:6333   */\n  0x00\n    /* \"#utility.yul\":6325:6330   */\n  dup3\n    /* \"#utility.yul\":6295:6334   */\n  tag_38\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6268:6269   */\n  0x01\n    /* \"#utility.yul\":6261:6266   */\n  dup2\n    /* \"#utility.yul\":6257:6270   */\n  add\n    /* \"#utility.yul\":6248:6270   */\n  swap1\n  pop\n    /* \"#utility.yul\":6224:6344   */\n  jump(tag_117)\ntag_119:\n    /* \"#utility.yul\":6164:6350   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6356:6899   */\ntag_40:\n    /* \"#utility.yul\":6457:6459   */\n  0x1f\n    /* \"#utility.yul\":6452:6455   */\n  dup3\n    /* \"#utility.yul\":6449:6460   */\n  gt\n    /* \"#utility.yul\":6446:6892   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6491:6529   */\n  tag_123\n    /* \"#utility.yul\":6523:6528   */\n  dup2\n    /* \"#utility.yul\":6491:6529   */\n  tag_29\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6575:6604   */\n  tag_124\n    /* \"#utility.yul\":6593:6603   */\n  dup5\n    /* \"#utility.yul\":6575:6604   */\n  tag_30\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6565:6573   */\n  dup2\n    /* \"#utility.yul\":6561:6605   */\n  add\n    /* \"#utility.yul\":6758:6760   */\n  0x20\n    /* \"#utility.yul\":6746:6756   */\n  dup6\n    /* \"#utility.yul\":6743:6761   */\n  lt\n    /* \"#utility.yul\":6740:6789   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6779:6787   */\n  dup2\n    /* \"#utility.yul\":6764:6787   */\n  swap1\n  pop\n    /* \"#utility.yul\":6740:6789   */\ntag_125:\n    /* \"#utility.yul\":6802:6882   */\n  tag_126\n    /* \"#utility.yul\":6858:6880   */\n  tag_127\n    /* \"#utility.yul\":6876:6879   */\n  dup6\n    /* \"#utility.yul\":6858:6880   */\n  tag_30\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6848:6856   */\n  dup4\n    /* \"#utility.yul\":6844:6881   */\n  add\n    /* \"#utility.yul\":6831:6842   */\n  dup3\n    /* \"#utility.yul\":6802:6882   */\n  tag_39\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6461:6892   */\n  pop\n  pop\n    /* \"#utility.yul\":6446:6892   */\ntag_122:\n    /* \"#utility.yul\":6356:6899   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6905:7022   */\ntag_41:\n    /* \"#utility.yul\":6959:6967   */\n  0x00\n    /* \"#utility.yul\":7009:7014   */\n  dup3\n    /* \"#utility.yul\":7003:7007   */\n  dup3\n    /* \"#utility.yul\":6999:7015   */\n  shr\n    /* \"#utility.yul\":6978:7015   */\n  swap1\n  pop\n    /* \"#utility.yul\":6905:7022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7028:7197   */\ntag_42:\n    /* \"#utility.yul\":7072:7078   */\n  0x00\n    /* \"#utility.yul\":7105:7156   */\n  tag_130\n    /* \"#utility.yul\":7153:7154   */\n  0x00\n    /* \"#utility.yul\":7149:7155   */\n  not\n    /* \"#utility.yul\":7141:7146   */\n  dup5\n    /* \"#utility.yul\":7138:7139   */\n  0x08\n    /* \"#utility.yul\":7134:7147   */\n  mul\n    /* \"#utility.yul\":7105:7156   */\n  tag_41\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7101:7157   */\n  not\n    /* \"#utility.yul\":7186:7190   */\n  dup1\n    /* \"#utility.yul\":7180:7184   */\n  dup4\n    /* \"#utility.yul\":7176:7191   */\n  and\n    /* \"#utility.yul\":7166:7191   */\n  swap2\n  pop\n    /* \"#utility.yul\":7079:7197   */\n  pop\n    /* \"#utility.yul\":7028:7197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7202:7497   */\ntag_43:\n    /* \"#utility.yul\":7278:7282   */\n  0x00\n    /* \"#utility.yul\":7424:7453   */\n  tag_132\n    /* \"#utility.yul\":7449:7452   */\n  dup4\n    /* \"#utility.yul\":7443:7447   */\n  dup4\n    /* \"#utility.yul\":7424:7453   */\n  tag_42\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7416:7453   */\n  swap2\n  pop\n    /* \"#utility.yul\":7486:7489   */\n  dup3\n    /* \"#utility.yul\":7483:7484   */\n  0x02\n    /* \"#utility.yul\":7479:7490   */\n  mul\n    /* \"#utility.yul\":7473:7477   */\n  dup3\n    /* \"#utility.yul\":7470:7491   */\n  or\n    /* \"#utility.yul\":7462:7491   */\n  swap1\n  pop\n    /* \"#utility.yul\":7202:7497   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7502:8897   */\ntag_7:\n    /* \"#utility.yul\":7619:7656   */\n  tag_134\n    /* \"#utility.yul\":7652:7655   */\n  dup3\n    /* \"#utility.yul\":7619:7656   */\n  tag_26\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7721:7739   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7713:7719   */\n  dup2\n    /* \"#utility.yul\":7710:7740   */\n  gt\n    /* \"#utility.yul\":7707:7763   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7743:7761   */\n  tag_136\n  tag_16\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7707:7763   */\ntag_135:\n    /* \"#utility.yul\":7787:7825   */\n  tag_137\n    /* \"#utility.yul\":7819:7823   */\n  dup3\n    /* \"#utility.yul\":7813:7824   */\n  sload\n    /* \"#utility.yul\":7787:7825   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7872:7939   */\n  tag_138\n    /* \"#utility.yul\":7932:7938   */\n  dup3\n    /* \"#utility.yul\":7924:7930   */\n  dup3\n    /* \"#utility.yul\":7918:7922   */\n  dup6\n    /* \"#utility.yul\":7872:7939   */\n  tag_40\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7966:7967   */\n  0x00\n    /* \"#utility.yul\":7990:7994   */\n  0x20\n    /* \"#utility.yul\":7977:7994   */\n  swap1\n  pop\n    /* \"#utility.yul\":8022:8024   */\n  0x1f\n    /* \"#utility.yul\":8014:8020   */\n  dup4\n    /* \"#utility.yul\":8011:8025   */\n  gt\n    /* \"#utility.yul\":8039:8040   */\n  0x01\n    /* \"#utility.yul\":8034:8652   */\n  dup2\n  eq\n  tag_140\n  jumpi\n    /* \"#utility.yul\":8696:8697   */\n  0x00\n    /* \"#utility.yul\":8713:8719   */\n  dup5\n    /* \"#utility.yul\":8710:8787   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":8762:8771   */\n  dup3\n    /* \"#utility.yul\":8757:8760   */\n  dup8\n    /* \"#utility.yul\":8753:8772   */\n  add\n    /* \"#utility.yul\":8747:8773   */\n  mload\n    /* \"#utility.yul\":8738:8773   */\n  swap1\n  pop\n    /* \"#utility.yul\":8710:8787   */\ntag_141:\n    /* \"#utility.yul\":8813:8880   */\n  tag_142\n    /* \"#utility.yul\":8873:8879   */\n  dup6\n    /* \"#utility.yul\":8866:8871   */\n  dup3\n    /* \"#utility.yul\":8813:8880   */\n  tag_43\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8807:8811   */\n  dup7\n    /* \"#utility.yul\":8800:8881   */\n  sstore\n    /* \"#utility.yul\":8669:8891   */\n  pop\n    /* \"#utility.yul\":8004:8891   */\n  jump(tag_139)\n    /* \"#utility.yul\":8034:8652   */\ntag_140:\n    /* \"#utility.yul\":8086:8090   */\n  0x1f\n    /* \"#utility.yul\":8082:8091   */\n  not\n    /* \"#utility.yul\":8074:8080   */\n  dup5\n    /* \"#utility.yul\":8070:8092   */\n  and\n    /* \"#utility.yul\":8120:8157   */\n  tag_143\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8120:8157   */\n  tag_29\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8179:8180   */\n  0x00\n    /* \"#utility.yul\":8193:8401   */\ntag_144:\n    /* \"#utility.yul\":8207:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8205   */\n  dup2\n    /* \"#utility.yul\":8201:8215   */\n  lt\n    /* \"#utility.yul\":8193:8401   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":8286:8295   */\n  dup5\n    /* \"#utility.yul\":8281:8284   */\n  dup10\n    /* \"#utility.yul\":8277:8296   */\n  add\n    /* \"#utility.yul\":8271:8297   */\n  mload\n    /* \"#utility.yul\":8263:8269   */\n  dup3\n    /* \"#utility.yul\":8256:8298   */\n  sstore\n    /* \"#utility.yul\":8337:8338   */\n  0x01\n    /* \"#utility.yul\":8329:8335   */\n  dup3\n    /* \"#utility.yul\":8325:8339   */\n  add\n    /* \"#utility.yul\":8315:8339   */\n  swap2\n  pop\n    /* \"#utility.yul\":8384:8386   */\n  0x20\n    /* \"#utility.yul\":8373:8382   */\n  dup6\n    /* \"#utility.yul\":8369:8387   */\n  add\n    /* \"#utility.yul\":8356:8387   */\n  swap5\n  pop\n    /* \"#utility.yul\":8230:8234   */\n  0x20\n    /* \"#utility.yul\":8227:8228   */\n  dup2\n    /* \"#utility.yul\":8223:8235   */\n  add\n    /* \"#utility.yul\":8218:8235   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8401   */\n  jump(tag_144)\ntag_146:\n    /* \"#utility.yul\":8429:8435   */\n  dup7\n    /* \"#utility.yul\":8420:8427   */\n  dup4\n    /* \"#utility.yul\":8417:8436   */\n  lt\n    /* \"#utility.yul\":8414:8593   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8487:8496   */\n  dup5\n    /* \"#utility.yul\":8482:8485   */\n  dup10\n    /* \"#utility.yul\":8478:8497   */\n  add\n    /* \"#utility.yul\":8472:8498   */\n  mload\n    /* \"#utility.yul\":8530:8578   */\n  tag_148\n    /* \"#utility.yul\":8572:8576   */\n  0x1f\n    /* \"#utility.yul\":8564:8570   */\n  dup10\n    /* \"#utility.yul\":8560:8577   */\n  and\n    /* \"#utility.yul\":8549:8558   */\n  dup3\n    /* \"#utility.yul\":8530:8578   */\n  tag_42\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8522:8528   */\n  dup4\n    /* \"#utility.yul\":8515:8579   */\n  sstore\n    /* \"#utility.yul\":8437:8593   */\n  pop\n    /* \"#utility.yul\":8414:8593   */\ntag_147:\n    /* \"#utility.yul\":8639:8640   */\n  0x01\n    /* \"#utility.yul\":8635:8636   */\n  0x02\n    /* \"#utility.yul\":8627:8633   */\n  dup9\n    /* \"#utility.yul\":8623:8637   */\n  mul\n    /* \"#utility.yul\":8619:8641   */\n  add\n    /* \"#utility.yul\":8613:8617   */\n  dup9\n    /* \"#utility.yul\":8606:8642   */\n  sstore\n    /* \"#utility.yul\":8041:8652   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8004:8891   */\ntag_139:\n  pop\n    /* \"#utility.yul\":7594:8897   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7502:8897   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BigBawlsToken.sol\":177:4184  contract BigBawls is IERC20, IBigBawlsTokenErrors {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BigBawlsToken.sol\":177:4184  contract BigBawls is IERC20, IBigBawlsTokenErrors {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":694:775  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":3611:3761  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":952:1041  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":1163:1573  function transferFrom(... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":872:946  function decimals() public pure returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":1047:1157  function balanceOf(address _account) public view returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":781:866  function symbol() public view returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":1579:1720  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":3469:3605  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BigBawlsToken.sol\":694:775  function name() public view returns (string memory) {... */\n    tag_14:\n        /* \"contracts/BigBawlsToken.sol\":731:744  string memory */\n      0x60\n        /* \"contracts/BigBawlsToken.sol\":763:768  _name */\n      0x01\n        /* \"contracts/BigBawlsToken.sol\":756:768  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":694:775  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":3611:3761  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_20:\n        /* \"contracts/BigBawlsToken.sol\":3678:3682  bool */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3694:3732  _approve(msg.sender, _spender, _value) */\n      tag_61\n        /* \"contracts/BigBawlsToken.sol\":3703:3713  msg.sender */\n      caller\n        /* \"contracts/BigBawlsToken.sol\":3715:3723  _spender */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":3725:3731  _value */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":3694:3702  _approve */\n      tag_62\n        /* \"contracts/BigBawlsToken.sol\":3694:3732  _approve(msg.sender, _spender, _value) */\n      jump\t// in\n    tag_61:\n        /* \"contracts/BigBawlsToken.sol\":3750:3754  true */\n      0x01\n        /* \"contracts/BigBawlsToken.sol\":3743:3754  return true */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":3611:3761  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":952:1041  function totalSupply() public view returns (uint256) {... */\n    tag_24:\n        /* \"contracts/BigBawlsToken.sol\":996:1003  uint256 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1022:1034  _totalSupply */\n      dup1\n      sload\n        /* \"contracts/BigBawlsToken.sol\":1015:1034  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":952:1041  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":1163:1573  function transferFrom(... */\n    tag_30:\n        /* \"contracts/BigBawlsToken.sol\":1275:1279  bool */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1291:1303  bool success */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":1306:1310  true */\n      0x01\n        /* \"contracts/BigBawlsToken.sol\":1291:1310  bool success = true */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":1334:1344  msg.sender */\n      caller\n        /* \"contracts/BigBawlsToken.sol\":1325:1344  _from != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":1325:1330  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1325:1344  _from != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BigBawlsToken.sol\":1321:1416  if (_from != msg.sender) {... */\n      tag_65\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":1370:1405  updateAllowance(_from, _to, _value) */\n      tag_66\n        /* \"contracts/BigBawlsToken.sol\":1386:1391  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1393:1396  _to */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1398:1404  _value */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1370:1385  updateAllowance */\n      tag_67\n        /* \"contracts/BigBawlsToken.sol\":1370:1405  updateAllowance(_from, _to, _value) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/BigBawlsToken.sol\":1360:1405  success = updateAllowance(_from, _to, _value) */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":1321:1416  if (_from != msg.sender) {... */\n    tag_65:\n        /* \"contracts/BigBawlsToken.sol\":1430:1437  success */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":1426:1498  if (success) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":1453:1487  updateBalances(_from, _to, _value) */\n      tag_69\n        /* \"contracts/BigBawlsToken.sol\":1468:1473  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1475:1478  _to */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1480:1486  _value */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1453:1467  updateBalances */\n      tag_70\n        /* \"contracts/BigBawlsToken.sol\":1453:1487  updateBalances(_from, _to, _value) */\n      jump\t// in\n    tag_69:\n      pop\n        /* \"contracts/BigBawlsToken.sol\":1426:1498  if (success) {... */\n    tag_68:\n        /* \"contracts/BigBawlsToken.sol\":1529:1532  _to */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":1513:1541  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":1522:1527  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1513:1541  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BigBawlsToken.sol\":1534:1540  _value */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":1513:1541  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BigBawlsToken.sol\":1559:1566  success */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":1552:1566  return success */\n      swap2\n      pop\n      pop\n        /* \"contracts/BigBawlsToken.sol\":1163:1573  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":872:946  function decimals() public pure returns (uint8) {... */\n    tag_33:\n        /* \"contracts/BigBawlsToken.sol\":913:918  uint8 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":937:939  18 */\n      0x12\n        /* \"contracts/BigBawlsToken.sol\":930:939  return 18 */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":872:946  function decimals() public pure returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":1047:1157  function balanceOf(address _account) public view returns (uint256) {... */\n    tag_39:\n        /* \"contracts/BigBawlsToken.sol\":1105:1112  uint256 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1131:1140  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":1131:1150  _balances[_account] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1141:1149  _account */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":1131:1150  _balances[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":1124:1150  return _balances[_account] */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":1047:1157  function balanceOf(address _account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":781:866  function symbol() public view returns (string memory) {... */\n    tag_42:\n        /* \"contracts/BigBawlsToken.sol\":820:833  string memory */\n      0x60\n        /* \"contracts/BigBawlsToken.sol\":852:859  _symbol */\n      0x02\n        /* \"contracts/BigBawlsToken.sol\":845:859  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":781:866  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":1579:1720  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_46:\n        /* \"contracts/BigBawlsToken.sol\":1642:1646  bool */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1658:1692  _transfer(msg.sender, _to, _value) */\n      tag_81\n        /* \"contracts/BigBawlsToken.sol\":1668:1678  msg.sender */\n      caller\n        /* \"contracts/BigBawlsToken.sol\":1680:1683  _to */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":1685:1691  _value */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":1658:1667  _transfer */\n      tag_82\n        /* \"contracts/BigBawlsToken.sol\":1658:1692  _transfer(msg.sender, _to, _value) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/BigBawlsToken.sol\":1709:1713  true */\n      0x01\n        /* \"contracts/BigBawlsToken.sol\":1702:1713  return true */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":1579:1720  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":3469:3605  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/BigBawlsToken.sol\":3543:3550  uint256 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3569:3580  _allowances */\n      0x04\n        /* \"contracts/BigBawlsToken.sol\":3569:3588  _allowances[_owner] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3581:3587  _owner */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":3569:3588  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BigBawlsToken.sol\":3569:3598  _allowances[_owner][_spender] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3589:3597  _spender */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":3569:3598  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":3562:3598  return _allowances[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":3469:3605  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":3767:4182  function _approve(... */\n    tag_62:\n        /* \"contracts/BigBawlsToken.sol\":3908:3909  0 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3888:3910  _spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":3888:3896  _spender */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":3888:3910  _spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":3884:3975  if (_spender == address(0)) {... */\n      tag_85\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":3955:3963  _spender */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":3933:3964  InvalidSpenderAddress(_spender) */\n      mload(0x40)\n      0xa1cb865900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":3884:3975  if (_spender == address(0)) {... */\n    tag_85:\n        /* \"contracts/BigBawlsToken.sol\":4007:4008  0 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3989:4009  _owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":3989:3995  _owner */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":3989:4009  _owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":3985:4070  if (_owner == address(0)) {... */\n      tag_88\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":4052:4058  _owner */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":4032:4059  InvalidOwnerAddress(_owner) */\n      mload(0x40)\n      0x01e4f95400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":3985:4070  if (_owner == address(0)) {... */\n    tag_88:\n        /* \"contracts/BigBawlsToken.sol\":4115:4121  _value */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":4079:4090  _allowances */\n      0x04\n        /* \"contracts/BigBawlsToken.sol\":4079:4102  _allowances[msg.sender] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":4091:4101  msg.sender */\n      caller\n        /* \"contracts/BigBawlsToken.sol\":4079:4102  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BigBawlsToken.sol\":4079:4112  _allowances[msg.sender][_spender] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":4103:4111  _spender */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":4079:4112  _allowances[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BigBawlsToken.sol\":4079:4121  _allowances[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BigBawlsToken.sol\":4158:4166  _spender */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":4137:4175  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":4146:4156  msg.sender */\n      caller\n        /* \"contracts/BigBawlsToken.sol\":4137:4175  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BigBawlsToken.sol\":4168:4174  _value */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":4137:4175  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BigBawlsToken.sol\":3767:4182  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":2416:2927  function updateAllowance(... */\n    tag_67:\n        /* \"contracts/BigBawlsToken.sol\":2532:2536  bool */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2569:2570  0 */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":2552:2571  _from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":2552:2557  _from */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":2552:2571  _from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":2548:2632  if (_from == address(0)) {... */\n      tag_92\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":2615:2620  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2594:2621  InvalidSenderAddress(_from) */\n      mload(0x40)\n      0x69ec708200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":2548:2632  if (_from == address(0)) {... */\n    tag_92:\n        /* \"contracts/BigBawlsToken.sol\":2661:2662  0 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2646:2663  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":2646:2649  _to */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2646:2663  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":2642:2724  if (_to == address(0)) {... */\n      tag_94\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":2709:2712  _to */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":2686:2713  InvalidReceiverAddress(_to) */\n      mload(0x40)\n      0x4a149d0800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":2642:2724  if (_to == address(0)) {... */\n    tag_94:\n        /* \"contracts/BigBawlsToken.sol\":2764:2770  _value */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":2738:2749  _allowances */\n      0x04\n        /* \"contracts/BigBawlsToken.sol\":2738:2756  _allowances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2750:2755  _from */\n      dup7\n        /* \"contracts/BigBawlsToken.sol\":2738:2756  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BigBawlsToken.sol\":2738:2761  _allowances[_from][_to] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2757:2760  _to */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":2738:2761  _allowances[_from][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":2738:2770  _allowances[_from][_to] < _value */\n      lt\n        /* \"contracts/BigBawlsToken.sol\":2734:2856  if (_allowances[_from][_to] < _value) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":2813:2818  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2820:2829  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":2820:2836  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2830:2835  _from */\n      dup7\n        /* \"contracts/BigBawlsToken.sol\":2820:2836  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":2838:2844  _value */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2793:2845  InsufficientBalance(_from, _balances[_from], _value) */\n      mload(0x40)\n      0xdb42144d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":2734:2856  if (_allowances[_from][_to] < _value) {... */\n    tag_96:\n        /* \"contracts/BigBawlsToken.sol\":2893:2899  _value */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":2866:2877  _allowances */\n      0x04\n        /* \"contracts/BigBawlsToken.sol\":2866:2884  _allowances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2878:2883  _from */\n      dup7\n        /* \"contracts/BigBawlsToken.sol\":2866:2884  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BigBawlsToken.sol\":2866:2889  _allowances[_from][_to] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2885:2888  _to */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":2866:2889  _allowances[_from][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2866:2899  _allowances[_from][_to] -= _value */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BigBawlsToken.sol\":2916:2920  true */\n      0x01\n        /* \"contracts/BigBawlsToken.sol\":2909:2920  return true */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":2416:2927  function updateAllowance(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":2933:3463  function updateBalances(... */\n    tag_70:\n        /* \"contracts/BigBawlsToken.sol\":3048:3052  bool */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3085:3086  0 */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":3068:3087  _from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":3068:3073  _from */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":3068:3087  _from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":3064:3148  if (_from == address(0)) {... */\n      tag_102\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":3131:3136  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":3110:3137  InvalidSenderAddress(_from) */\n      mload(0x40)\n      0x69ec708200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":3064:3148  if (_from == address(0)) {... */\n    tag_102:\n        /* \"contracts/BigBawlsToken.sol\":3177:3178  0 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3162:3179  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":3162:3165  _to */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":3162:3179  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":3158:3240  if (_to == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":3225:3228  _to */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":3202:3229  InvalidReceiverAddress(_to) */\n      mload(0x40)\n      0x4a149d0800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":3158:3240  if (_to == address(0)) {... */\n    tag_104:\n        /* \"contracts/BigBawlsToken.sol\":3273:3279  _value */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":3254:3263  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":3254:3270  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3264:3269  _from */\n      dup7\n        /* \"contracts/BigBawlsToken.sol\":3254:3270  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":3254:3279  _balances[_from] < _value */\n      lt\n        /* \"contracts/BigBawlsToken.sol\":3250:3365  if (_balances[_from] < _value) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":3322:3327  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":3329:3338  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":3329:3345  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3339:3344  _from */\n      dup7\n        /* \"contracts/BigBawlsToken.sol\":3329:3345  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":3347:3353  _value */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":3302:3354  InsufficientBalance(_from, _balances[_from], _value) */\n      mload(0x40)\n      0xdb42144d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":3250:3365  if (_balances[_from] < _value) {... */\n    tag_106:\n        /* \"contracts/BigBawlsToken.sol\":3395:3401  _value */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":3375:3384  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":3375:3391  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3385:3390  _from */\n      dup7\n        /* \"contracts/BigBawlsToken.sol\":3375:3391  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3375:3401  _balances[_from] -= _value */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BigBawlsToken.sol\":3429:3435  _value */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":3411:3420  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":3411:3425  _balances[_to] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3421:3424  _to */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":3411:3425  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":3411:3435  _balances[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BigBawlsToken.sol\":3452:3456  true */\n      0x01\n        /* \"contracts/BigBawlsToken.sol\":3445:3456  return true */\n      swap1\n      pop\n        /* \"contracts/BigBawlsToken.sol\":2933:3463  function updateBalances(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":1726:2058  function _transfer(... */\n    tag_82:\n        /* \"contracts/BigBawlsToken.sol\":1859:1860  0 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1842:1861  _from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":1842:1847  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":1842:1861  _from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":1838:1922  if (_from == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":1905:1910  _from */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":1884:1911  InvalidSenderAddress(_from) */\n      mload(0x40)\n      0x69ec708200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":1838:1922  if (_from == address(0)) {... */\n    tag_112:\n        /* \"contracts/BigBawlsToken.sol\":1951:1952  0 */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":1936:1953  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":1936:1939  _to */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":1936:1953  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BigBawlsToken.sol\":1932:2014  if (_to == address(0)) {... */\n      tag_114\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":1999:2002  _to */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":1976:2003  InvalidReceiverAddress(_to) */\n      mload(0x40)\n      0x4a149d0800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":1932:2014  if (_to == address(0)) {... */\n    tag_114:\n        /* \"contracts/BigBawlsToken.sol\":2024:2051  _update(_from, _to, _value) */\n      tag_116\n        /* \"contracts/BigBawlsToken.sol\":2032:2037  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2039:2042  _to */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2044:2050  _value */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2024:2031  _update */\n      tag_117\n        /* \"contracts/BigBawlsToken.sol\":2024:2051  _update(_from, _to, _value) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/BigBawlsToken.sol\":1726:2058  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BigBawlsToken.sol\":2064:2410  function _update(... */\n    tag_117:\n        /* \"contracts/BigBawlsToken.sol\":2197:2203  _value */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":2178:2187  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":2178:2194  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2188:2193  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":2178:2194  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":2178:2203  _balances[_from] < _value */\n      lt\n        /* \"contracts/BigBawlsToken.sol\":2174:2289  if (_balances[_from] < _value) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/BigBawlsToken.sol\":2246:2251  _from */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":2253:2262  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":2253:2269  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2263:2268  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":2253:2269  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BigBawlsToken.sol\":2271:2277  _value */\n      dup3\n        /* \"contracts/BigBawlsToken.sol\":2226:2278  InsufficientBalance(_from, _balances[_from], _value) */\n      mload(0x40)\n      0xdb42144d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BigBawlsToken.sol\":2174:2289  if (_balances[_from] < _value) {... */\n    tag_119:\n        /* \"contracts/BigBawlsToken.sol\":2319:2325  _value */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":2299:2308  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":2299:2315  _balances[_from] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2309:2314  _from */\n      dup6\n        /* \"contracts/BigBawlsToken.sol\":2299:2315  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2299:2325  _balances[_from] -= _value */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BigBawlsToken.sol\":2353:2359  _value */\n      dup1\n        /* \"contracts/BigBawlsToken.sol\":2335:2344  _balances */\n      0x03\n        /* \"contracts/BigBawlsToken.sol\":2335:2349  _balances[_to] */\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2345:2348  _to */\n      dup5\n        /* \"contracts/BigBawlsToken.sol\":2335:2349  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BigBawlsToken.sol\":2335:2359  _balances[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BigBawlsToken.sol\":2391:2394  _to */\n      dup2\n        /* \"contracts/BigBawlsToken.sol\":2375:2403  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BigBawlsToken.sol\":2384:2389  _from */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2375:2403  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BigBawlsToken.sol\":2396:2402  _value */\n      dup4\n        /* \"contracts/BigBawlsToken.sol\":2375:2403  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BigBawlsToken.sol\":2064:2410  function _update(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_124:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_125:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_126:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_127:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_128:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_153\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":711:782   */\n      tag_154\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_125\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_155\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_126\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":881:910   */\n      tag_156\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_127\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_16:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_158\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_128\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_130:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_132:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_133:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_164\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_132\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_134:\n        /* \"#utility.yul\":1876:1900   */\n      tag_166\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_133\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_167:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_135:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_169\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_134\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_136:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_137:\n        /* \"#utility.yul\":2232:2256   */\n      tag_172\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_136\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_173:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_138:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_175\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_137\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_19:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_178\n      tag_130\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2525:2644   */\n    tag_177:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_179\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_135\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_180\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_138\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_139:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_140:\n        /* \"#utility.yul\":3089:3110   */\n      tag_183\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_139\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_22:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_185\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_141:\n        /* \"#utility.yul\":3426:3450   */\n      tag_187\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_136\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_26:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_189\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_141\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_29:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_192\n      tag_130\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3801:3920   */\n    tag_191:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_193\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_135\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_194\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_135\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_195\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_138\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_142:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_143:\n        /* \"#utility.yul\":4491:4513   */\n      tag_198\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_142\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_35:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_200\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_143\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_38:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_203\n      tag_130\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4822:4941   */\n    tag_202:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_204\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_135\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_50:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_207\n      tag_130\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5174:5293   */\n    tag_206:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_208\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_135\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_209\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_135\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_144:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_55:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_212:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_214\n      tag_144\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5977:6061   */\n    tag_213:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6191   */\n    tag_145:\n        /* \"#utility.yul\":6160:6184   */\n      tag_216\n        /* \"#utility.yul\":6178:6183   */\n      dup2\n        /* \"#utility.yul\":6160:6184   */\n      tag_133\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6155:6158   */\n      dup3\n        /* \"#utility.yul\":6148:6185   */\n      mstore\n        /* \"#utility.yul\":6073:6191   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:6419   */\n    tag_87:\n        /* \"#utility.yul\":6290:6294   */\n      0x00\n        /* \"#utility.yul\":6328:6330   */\n      0x20\n        /* \"#utility.yul\":6317:6326   */\n      dup3\n        /* \"#utility.yul\":6313:6331   */\n      add\n        /* \"#utility.yul\":6305:6331   */\n      swap1\n      pop\n        /* \"#utility.yul\":6341:6412   */\n      tag_218\n        /* \"#utility.yul\":6409:6410   */\n      0x00\n        /* \"#utility.yul\":6398:6407   */\n      dup4\n        /* \"#utility.yul\":6394:6411   */\n      add\n        /* \"#utility.yul\":6385:6391   */\n      dup5\n        /* \"#utility.yul\":6341:6412   */\n      tag_145\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6197:6419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6867   */\n    tag_98:\n        /* \"#utility.yul\":6574:6578   */\n      0x00\n        /* \"#utility.yul\":6612:6614   */\n      0x60\n        /* \"#utility.yul\":6601:6610   */\n      dup3\n        /* \"#utility.yul\":6597:6615   */\n      add\n        /* \"#utility.yul\":6589:6615   */\n      swap1\n      pop\n        /* \"#utility.yul\":6625:6696   */\n      tag_220\n        /* \"#utility.yul\":6693:6694   */\n      0x00\n        /* \"#utility.yul\":6682:6691   */\n      dup4\n        /* \"#utility.yul\":6678:6695   */\n      add\n        /* \"#utility.yul\":6669:6675   */\n      dup7\n        /* \"#utility.yul\":6625:6696   */\n      tag_145\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6706:6778   */\n      tag_221\n        /* \"#utility.yul\":6774:6776   */\n      0x20\n        /* \"#utility.yul\":6763:6772   */\n      dup4\n        /* \"#utility.yul\":6759:6777   */\n      add\n        /* \"#utility.yul\":6750:6756   */\n      dup6\n        /* \"#utility.yul\":6706:6778   */\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6788:6860   */\n      tag_222\n        /* \"#utility.yul\":6856:6858   */\n      0x40\n        /* \"#utility.yul\":6845:6854   */\n      dup4\n        /* \"#utility.yul\":6841:6859   */\n      add\n        /* \"#utility.yul\":6832:6838   */\n      dup5\n        /* \"#utility.yul\":6788:6860   */\n      tag_141\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6425:6867   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_146:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x11\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7253   */\n    tag_100:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7119:7139   */\n      tag_225\n        /* \"#utility.yul\":7137:7138   */\n      dup3\n        /* \"#utility.yul\":7119:7139   */\n      tag_136\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7114:7139   */\n      swap2\n      pop\n        /* \"#utility.yul\":7153:7173   */\n      tag_226\n        /* \"#utility.yul\":7171:7172   */\n      dup4\n        /* \"#utility.yul\":7153:7173   */\n      tag_136\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7148:7173   */\n      swap3\n      pop\n        /* \"#utility.yul\":7197:7198   */\n      dup3\n        /* \"#utility.yul\":7194:7195   */\n      dup3\n        /* \"#utility.yul\":7190:7199   */\n      sub\n        /* \"#utility.yul\":7182:7199   */\n      swap1\n      pop\n        /* \"#utility.yul\":7221:7222   */\n      dup2\n        /* \"#utility.yul\":7215:7219   */\n      dup2\n        /* \"#utility.yul\":7212:7223   */\n      gt\n        /* \"#utility.yul\":7209:7246   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":7226:7244   */\n      tag_228\n      tag_146\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7209:7246   */\n    tag_227:\n        /* \"#utility.yul\":7059:7253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7259:7450   */\n    tag_110:\n        /* \"#utility.yul\":7299:7302   */\n      0x00\n        /* \"#utility.yul\":7318:7338   */\n      tag_230\n        /* \"#utility.yul\":7336:7337   */\n      dup3\n        /* \"#utility.yul\":7318:7338   */\n      tag_136\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7313:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7352:7372   */\n      tag_231\n        /* \"#utility.yul\":7370:7371   */\n      dup4\n        /* \"#utility.yul\":7352:7372   */\n      tag_136\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7347:7372   */\n      swap3\n      pop\n        /* \"#utility.yul\":7395:7396   */\n      dup3\n        /* \"#utility.yul\":7392:7393   */\n      dup3\n        /* \"#utility.yul\":7388:7397   */\n      add\n        /* \"#utility.yul\":7381:7397   */\n      swap1\n      pop\n        /* \"#utility.yul\":7416:7419   */\n      dup1\n        /* \"#utility.yul\":7413:7414   */\n      dup3\n        /* \"#utility.yul\":7410:7420   */\n      gt\n        /* \"#utility.yul\":7407:7443   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":7423:7441   */\n      tag_233\n      tag_146\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7407:7443   */\n    tag_232:\n        /* \"#utility.yul\":7259:7450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a74f2ed5f6daf10c226aa3d48291afb14022ada6c30b3bccf137bcf87ddc28064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_838": {
									"entryPoint": null,
									"id": 838,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8900:7",
										"nodeType": "YulBlock",
										"src": "0:8900:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1672:77:7",
													"nodeType": "YulBlock",
													"src": "1672:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:7"
																},
																"nativeSrc": "1683:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:7"
															},
															"nativeSrc": "1683:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:7"
																		},
																		"nativeSrc": "1722:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:7"
																},
																"nativeSrc": "1715:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:7"
															},
															"nativeSrc": "1715:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:7",
														"nodeType": "YulTypedName",
														"src": "1654:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:7",
														"nodeType": "YulTypedName",
														"src": "1659:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													}
												],
												"src": "1610:139:7"
											},
											{
												"body": {
													"nativeSrc": "1850:339:7",
													"nodeType": "YulBlock",
													"src": "1850:339:7",
													"statements": [
														{
															"nativeSrc": "1860:75:7",
															"nodeType": "YulAssignment",
															"src": "1860:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:7"
																		},
																		"nativeSrc": "1885:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:7"
																},
																"nativeSrc": "1869:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:7"
																},
																"nativeSrc": "1944:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:7"
															},
															"nativeSrc": "1944:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:7"
														},
														{
															"nativeSrc": "1974:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nativeSrc": "1985:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:7",
																"nodeType": "YulBlock",
																"src": "2039:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:7"
																			},
																			"nativeSrc": "2041:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:7"
																		},
																		"nativeSrc": "2041:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:7"
																		},
																		"nativeSrc": "2016:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:7"
																},
																"nativeSrc": "2013:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:7"
															},
															"nativeSrc": "2010:112:7",
															"nodeType": "YulIf",
															"src": "2010:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:7"
																},
																"nativeSrc": "2131:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:7"
															},
															"nativeSrc": "2131:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:7",
														"nodeType": "YulTypedName",
														"src": "1823:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:7",
														"nodeType": "YulTypedName",
														"src": "1828:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:7",
														"nodeType": "YulTypedName",
														"src": "1836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:7",
														"nodeType": "YulTypedName",
														"src": "1844:5:7",
														"type": ""
													}
												],
												"src": "1755:434:7"
											},
											{
												"body": {
													"nativeSrc": "2282:282:7",
													"nodeType": "YulBlock",
													"src": "2282:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:7",
																"nodeType": "YulBlock",
																"src": "2331:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:7"
																			},
																			"nativeSrc": "2333:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:7"
																		},
																		"nativeSrc": "2333:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:7"
																				},
																				"nativeSrc": "2306:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:7"
																		},
																		"nativeSrc": "2302:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:7"
																},
																"nativeSrc": "2295:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:7"
															},
															"nativeSrc": "2292:122:7",
															"nodeType": "YulIf",
															"src": "2292:122:7"
														},
														{
															"nativeSrc": "2423:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:7"
																},
																"nativeSrc": "2437:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:7",
															"nodeType": "YulAssignment",
															"src": "2459:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:7"
																},
																"nativeSrc": "2468:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:7",
														"nodeType": "YulTypedName",
														"src": "2260:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:7",
														"nodeType": "YulTypedName",
														"src": "2268:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:7",
														"nodeType": "YulTypedName",
														"src": "2276:5:7",
														"type": ""
													}
												],
												"src": "2209:355:7"
											},
											{
												"body": {
													"nativeSrc": "2615:32:7",
													"nodeType": "YulBlock",
													"src": "2615:32:7",
													"statements": [
														{
															"nativeSrc": "2625:16:7",
															"nodeType": "YulAssignment",
															"src": "2625:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:7",
																"nodeType": "YulIdentifier",
																"src": "2636:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:7",
														"nodeType": "YulTypedName",
														"src": "2597:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:7",
														"nodeType": "YulTypedName",
														"src": "2607:7:7",
														"type": ""
													}
												],
												"src": "2570:77:7"
											},
											{
												"body": {
													"nativeSrc": "2696:79:7",
													"nodeType": "YulBlock",
													"src": "2696:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:7",
																"nodeType": "YulBlock",
																"src": "2753:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:7"
																			},
																			"nativeSrc": "2755:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:7"
																		},
																		"nativeSrc": "2755:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:7"
																				},
																				"nativeSrc": "2726:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:7"
																		},
																		"nativeSrc": "2716:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:7"
																},
																"nativeSrc": "2709:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:7"
															},
															"nativeSrc": "2706:63:7",
															"nodeType": "YulIf",
															"src": "2706:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:7",
														"nodeType": "YulTypedName",
														"src": "2689:5:7",
														"type": ""
													}
												],
												"src": "2653:122:7"
											},
											{
												"body": {
													"nativeSrc": "2844:80:7",
													"nodeType": "YulBlock",
													"src": "2844:80:7",
													"statements": [
														{
															"nativeSrc": "2854:22:7",
															"nodeType": "YulAssignment",
															"src": "2854:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:7"
																},
																"nativeSrc": "2863:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:7"
																},
																"nativeSrc": "2885:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:7"
															},
															"nativeSrc": "2885:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:7",
														"nodeType": "YulTypedName",
														"src": "2822:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:7",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:7",
														"nodeType": "YulTypedName",
														"src": "2838:5:7",
														"type": ""
													}
												],
												"src": "2781:143:7"
											},
											{
												"body": {
													"nativeSrc": "3061:878:7",
													"nodeType": "YulBlock",
													"src": "3061:878:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3107:83:7",
																"nodeType": "YulBlock",
																"src": "3107:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3109:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3109:77:7"
																			},
																			"nativeSrc": "3109:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3109:79:7"
																		},
																		"nativeSrc": "3109:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3082:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3091:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3078:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:7"
																		},
																		"nativeSrc": "3078:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3103:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3074:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:7"
																},
																"nativeSrc": "3074:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3074:32:7"
															},
															"nativeSrc": "3071:119:7",
															"nodeType": "YulIf",
															"src": "3071:119:7"
														},
														{
															"nativeSrc": "3200:291:7",
															"nodeType": "YulBlock",
															"src": "3200:291:7",
															"statements": [
																{
																	"nativeSrc": "3215:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3215:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3239:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3239:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3250:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3250:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3235:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3235:3:7"
																				},
																				"nativeSrc": "3235:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3235:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3229:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3229:5:7"
																		},
																		"nativeSrc": "3229:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3219:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3219:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3300:83:7",
																		"nodeType": "YulBlock",
																		"src": "3300:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3302:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3302:77:7"
																					},
																					"nativeSrc": "3302:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3302:79:7"
																				},
																				"nativeSrc": "3302:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3302:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3272:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3272:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3280:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3280:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3269:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3269:2:7"
																		},
																		"nativeSrc": "3269:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:30:7"
																	},
																	"nativeSrc": "3266:117:7",
																	"nodeType": "YulIf",
																	"src": "3266:117:7"
																},
																{
																	"nativeSrc": "3397:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3397:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3453:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3464:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3449:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:7"
																				},
																				"nativeSrc": "3449:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3473:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3407:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3407:41:7"
																		},
																		"nativeSrc": "3407:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3397:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3397:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3501:292:7",
															"nodeType": "YulBlock",
															"src": "3501:292:7",
															"statements": [
																{
																	"nativeSrc": "3516:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3516:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3540:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3551:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3551:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3536:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:7"
																				},
																				"nativeSrc": "3536:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3536:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3530:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3530:5:7"
																		},
																		"nativeSrc": "3530:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3520:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3520:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3602:83:7",
																		"nodeType": "YulBlock",
																		"src": "3602:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3604:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3604:77:7"
																					},
																					"nativeSrc": "3604:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3604:79:7"
																				},
																				"nativeSrc": "3604:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3604:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3574:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3582:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3582:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3571:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3571:2:7"
																		},
																		"nativeSrc": "3571:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:30:7"
																	},
																	"nativeSrc": "3568:117:7",
																	"nodeType": "YulIf",
																	"src": "3568:117:7"
																},
																{
																	"nativeSrc": "3699:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3699:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3755:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3766:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3751:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:7"
																				},
																				"nativeSrc": "3751:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3775:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3709:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3709:41:7"
																		},
																		"nativeSrc": "3709:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3709:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3803:129:7",
															"nodeType": "YulBlock",
															"src": "3803:129:7",
															"statements": [
																{
																	"nativeSrc": "3818:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3822:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3848:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3848:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3894:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3894:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3905:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3905:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3890:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3890:3:7"
																				},
																				"nativeSrc": "3890:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3890:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3914:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3914:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3858:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3858:31:7"
																		},
																		"nativeSrc": "3858:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3848:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "2930:1009:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3015:9:7",
														"nodeType": "YulTypedName",
														"src": "3015:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3026:7:7",
														"nodeType": "YulTypedName",
														"src": "3026:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3038:6:7",
														"nodeType": "YulTypedName",
														"src": "3038:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3046:6:7",
														"nodeType": "YulTypedName",
														"src": "3046:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3054:6:7",
														"nodeType": "YulTypedName",
														"src": "3054:6:7",
														"type": ""
													}
												],
												"src": "2930:1009:7"
											},
											{
												"body": {
													"nativeSrc": "4004:40:7",
													"nodeType": "YulBlock",
													"src": "4004:40:7",
													"statements": [
														{
															"nativeSrc": "4015:22:7",
															"nodeType": "YulAssignment",
															"src": "4015:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4031:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4031:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4025:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:7"
																},
																"nativeSrc": "4025:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4025:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3945:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3987:5:7",
														"nodeType": "YulTypedName",
														"src": "3987:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3997:6:7",
														"nodeType": "YulTypedName",
														"src": "3997:6:7",
														"type": ""
													}
												],
												"src": "3945:99:7"
											},
											{
												"body": {
													"nativeSrc": "4078:152:7",
													"nodeType": "YulBlock",
													"src": "4078:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4095:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4095:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4098:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4088:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:7"
																},
																"nativeSrc": "4088:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4088:88:7"
															},
															"nativeSrc": "4088:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4088:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4192:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4195:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:7"
																},
																"nativeSrc": "4185:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4185:15:7"
															},
															"nativeSrc": "4185:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4185:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4216:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4216:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4219:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4209:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:7"
																},
																"nativeSrc": "4209:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4209:15:7"
															},
															"nativeSrc": "4209:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4209:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4050:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4050:180:7"
											},
											{
												"body": {
													"nativeSrc": "4287:269:7",
													"nodeType": "YulBlock",
													"src": "4287:269:7",
													"statements": [
														{
															"nativeSrc": "4297:22:7",
															"nodeType": "YulAssignment",
															"src": "4297:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4311:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4311:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:7"
																},
																"nativeSrc": "4307:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4307:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:7"
																}
															]
														},
														{
															"nativeSrc": "4328:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4328:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4358:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4358:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4364:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4354:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:7"
																},
																"nativeSrc": "4354:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4354:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4332:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4332:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4405:51:7",
																"nodeType": "YulBlock",
																"src": "4405:51:7",
																"statements": [
																	{
																		"nativeSrc": "4419:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4419:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4433:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4433:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4441:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4429:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4429:3:7"
																			},
																			"nativeSrc": "4429:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4429:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4419:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4385:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4385:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4378:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:7"
																},
																"nativeSrc": "4378:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4378:26:7"
															},
															"nativeSrc": "4375:81:7",
															"nodeType": "YulIf",
															"src": "4375:81:7"
														},
														{
															"body": {
																"nativeSrc": "4508:42:7",
																"nodeType": "YulBlock",
																"src": "4508:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4522:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4522:16:7"
																			},
																			"nativeSrc": "4522:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4522:18:7"
																		},
																		"nativeSrc": "4522:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4522:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4472:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4472:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4495:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4495:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4503:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4503:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4492:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4492:2:7"
																		},
																		"nativeSrc": "4492:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4492:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4469:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4469:2:7"
																},
																"nativeSrc": "4469:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4469:38:7"
															},
															"nativeSrc": "4466:84:7",
															"nodeType": "YulIf",
															"src": "4466:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4236:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4271:4:7",
														"nodeType": "YulTypedName",
														"src": "4271:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4280:6:7",
														"nodeType": "YulTypedName",
														"src": "4280:6:7",
														"type": ""
													}
												],
												"src": "4236:320:7"
											},
											{
												"body": {
													"nativeSrc": "4616:87:7",
													"nodeType": "YulBlock",
													"src": "4616:87:7",
													"statements": [
														{
															"nativeSrc": "4626:11:7",
															"nodeType": "YulAssignment",
															"src": "4626:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4634:3:7",
																"nodeType": "YulIdentifier",
																"src": "4634:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4626:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4654:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4657:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4657:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4647:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:7"
																},
																"nativeSrc": "4647:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4647:14:7"
															},
															"nativeSrc": "4647:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4647:14:7"
														},
														{
															"nativeSrc": "4670:26:7",
															"nodeType": "YulAssignment",
															"src": "4670:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4688:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4688:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4691:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4691:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4678:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4678:9:7"
																},
																"nativeSrc": "4678:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4678:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4670:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4670:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4562:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4603:3:7",
														"nodeType": "YulTypedName",
														"src": "4603:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4611:4:7",
														"nodeType": "YulTypedName",
														"src": "4611:4:7",
														"type": ""
													}
												],
												"src": "4562:141:7"
											},
											{
												"body": {
													"nativeSrc": "4753:49:7",
													"nodeType": "YulBlock",
													"src": "4753:49:7",
													"statements": [
														{
															"nativeSrc": "4763:33:7",
															"nodeType": "YulAssignment",
															"src": "4763:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4781:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4781:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4788:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4788:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4777:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4777:3:7"
																		},
																		"nativeSrc": "4777:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4777:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:7"
																},
																"nativeSrc": "4773:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4763:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4709:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4736:5:7",
														"nodeType": "YulTypedName",
														"src": "4736:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4746:6:7",
														"nodeType": "YulTypedName",
														"src": "4746:6:7",
														"type": ""
													}
												],
												"src": "4709:93:7"
											},
											{
												"body": {
													"nativeSrc": "4861:54:7",
													"nodeType": "YulBlock",
													"src": "4861:54:7",
													"statements": [
														{
															"nativeSrc": "4871:37:7",
															"nodeType": "YulAssignment",
															"src": "4871:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4896:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4896:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4902:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4902:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4892:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:7"
																},
																"nativeSrc": "4892:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4892:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4871:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4871:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4808:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4836:4:7",
														"nodeType": "YulTypedName",
														"src": "4836:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4842:5:7",
														"nodeType": "YulTypedName",
														"src": "4842:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4852:8:7",
														"nodeType": "YulTypedName",
														"src": "4852:8:7",
														"type": ""
													}
												],
												"src": "4808:107:7"
											},
											{
												"body": {
													"nativeSrc": "4997:317:7",
													"nodeType": "YulBlock",
													"src": "4997:317:7",
													"statements": [
														{
															"nativeSrc": "5007:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5007:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5028:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5028:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5024:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:7"
																},
																"nativeSrc": "5024:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5024:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5011:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5011:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5051:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5051:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5082:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5093:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5063:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5063:18:7"
																},
																"nativeSrc": "5063:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5063:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5055:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5055:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5169:51:7",
															"nodeType": "YulAssignment",
															"src": "5169:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5200:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5211:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5211:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5181:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5181:18:7"
																},
																"nativeSrc": "5181:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5181:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5169:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5169:8:7"
																}
															]
														},
														{
															"nativeSrc": "5229:30:7",
															"nodeType": "YulAssignment",
															"src": "5229:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5242:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5242:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5253:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5253:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:7"
																		},
																		"nativeSrc": "5249:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5238:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:7"
																},
																"nativeSrc": "5238:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5238:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5229:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5229:5:7"
																}
															]
														},
														{
															"nativeSrc": "5268:40:7",
															"nodeType": "YulAssignment",
															"src": "5268:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5281:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5281:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5292:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5292:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5302:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5302:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:7"
																		},
																		"nativeSrc": "5288:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5278:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5278:2:7"
																},
																"nativeSrc": "5278:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5278:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5268:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4921:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4958:5:7",
														"nodeType": "YulTypedName",
														"src": "4958:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4965:10:7",
														"nodeType": "YulTypedName",
														"src": "4965:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4977:8:7",
														"nodeType": "YulTypedName",
														"src": "4977:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4990:6:7",
														"nodeType": "YulTypedName",
														"src": "4990:6:7",
														"type": ""
													}
												],
												"src": "4921:393:7"
											},
											{
												"body": {
													"nativeSrc": "5352:28:7",
													"nodeType": "YulBlock",
													"src": "5352:28:7",
													"statements": [
														{
															"nativeSrc": "5362:12:7",
															"nodeType": "YulAssignment",
															"src": "5362:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5369:5:7",
																"nodeType": "YulIdentifier",
																"src": "5369:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5362:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5320:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5338:5:7",
														"nodeType": "YulTypedName",
														"src": "5338:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5348:3:7",
														"nodeType": "YulTypedName",
														"src": "5348:3:7",
														"type": ""
													}
												],
												"src": "5320:60:7"
											},
											{
												"body": {
													"nativeSrc": "5446:82:7",
													"nodeType": "YulBlock",
													"src": "5446:82:7",
													"statements": [
														{
															"nativeSrc": "5456:66:7",
															"nodeType": "YulAssignment",
															"src": "5456:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5514:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5514:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5496:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5496:17:7"
																				},
																				"nativeSrc": "5496:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5487:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5487:8:7"
																		},
																		"nativeSrc": "5487:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5487:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5469:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5469:17:7"
																},
																"nativeSrc": "5469:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5469:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5456:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5456:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5386:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5426:5:7",
														"nodeType": "YulTypedName",
														"src": "5426:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5436:9:7",
														"nodeType": "YulTypedName",
														"src": "5436:9:7",
														"type": ""
													}
												],
												"src": "5386:142:7"
											},
											{
												"body": {
													"nativeSrc": "5581:28:7",
													"nodeType": "YulBlock",
													"src": "5581:28:7",
													"statements": [
														{
															"nativeSrc": "5591:12:7",
															"nodeType": "YulAssignment",
															"src": "5591:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5598:5:7",
																"nodeType": "YulIdentifier",
																"src": "5598:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5591:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5534:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5567:5:7",
														"nodeType": "YulTypedName",
														"src": "5567:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5577:3:7",
														"nodeType": "YulTypedName",
														"src": "5577:3:7",
														"type": ""
													}
												],
												"src": "5534:75:7"
											},
											{
												"body": {
													"nativeSrc": "5691:193:7",
													"nodeType": "YulBlock",
													"src": "5691:193:7",
													"statements": [
														{
															"nativeSrc": "5701:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5701:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5756:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5756:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5725:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5725:30:7"
																},
																"nativeSrc": "5725:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5725:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5705:16:7",
																	"nodeType": "YulTypedName",
																	"src": "5705:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5780:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5820:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "5820:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5814:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5814:5:7"
																				},
																				"nativeSrc": "5814:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5814:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5827:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5827:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5859:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "5859:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5835:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "5835:23:7"
																				},
																				"nativeSrc": "5835:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5835:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5786:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "5786:27:7"
																		},
																		"nativeSrc": "5786:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5786:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:7"
																},
																"nativeSrc": "5773:105:7",
																"nodeType": "YulFunctionCall",
																"src": "5773:105:7"
															},
															"nativeSrc": "5773:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "5773:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5615:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5668:4:7",
														"nodeType": "YulTypedName",
														"src": "5668:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5682:7:7",
														"nodeType": "YulTypedName",
														"src": "5682:7:7",
														"type": ""
													}
												],
												"src": "5615:269:7"
											},
											{
												"body": {
													"nativeSrc": "5939:24:7",
													"nodeType": "YulBlock",
													"src": "5939:24:7",
													"statements": [
														{
															"nativeSrc": "5949:8:7",
															"nodeType": "YulAssignment",
															"src": "5949:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5956:1:7",
																"nodeType": "YulLiteral",
																"src": "5956:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5949:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5890:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5935:3:7",
														"nodeType": "YulTypedName",
														"src": "5935:3:7",
														"type": ""
													}
												],
												"src": "5890:73:7"
											},
											{
												"body": {
													"nativeSrc": "6022:136:7",
													"nodeType": "YulBlock",
													"src": "6022:136:7",
													"statements": [
														{
															"nativeSrc": "6032:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6032:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6046:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6046:30:7"
																},
																"nativeSrc": "6046:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6046:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6036:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6036:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6131:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6131:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6137:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6137:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6145:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6087:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6087:43:7"
																},
																"nativeSrc": "6087:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6087:65:7"
															},
															"nativeSrc": "6087:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6087:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5969:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6008:4:7",
														"nodeType": "YulTypedName",
														"src": "6008:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6014:6:7",
														"nodeType": "YulTypedName",
														"src": "6014:6:7",
														"type": ""
													}
												],
												"src": "5969:189:7"
											},
											{
												"body": {
													"nativeSrc": "6214:136:7",
													"nodeType": "YulBlock",
													"src": "6214:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6281:63:7",
																"nodeType": "YulBlock",
																"src": "6281:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6325:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6325:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6332:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6332:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6295:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6295:29:7"
																			},
																			"nativeSrc": "6295:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6295:39:7"
																		},
																		"nativeSrc": "6295:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6295:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6234:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6234:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6241:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6231:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6231:2:7"
																},
																"nativeSrc": "6231:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6231:14:7"
															},
															"nativeSrc": "6224:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6246:26:7",
																"nodeType": "YulBlock",
																"src": "6246:26:7",
																"statements": [
																	{
																		"nativeSrc": "6248:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6248:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6261:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6261:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6268:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6257:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6257:3:7"
																			},
																			"nativeSrc": "6257:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6257:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6248:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6248:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6228:2:7",
																"nodeType": "YulBlock",
																"src": "6228:2:7",
																"statements": []
															},
															"src": "6224:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6164:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6202:5:7",
														"nodeType": "YulTypedName",
														"src": "6202:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6209:3:7",
														"nodeType": "YulTypedName",
														"src": "6209:3:7",
														"type": ""
													}
												],
												"src": "6164:186:7"
											},
											{
												"body": {
													"nativeSrc": "6435:464:7",
													"nodeType": "YulBlock",
													"src": "6435:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6461:431:7",
																"nodeType": "YulBlock",
																"src": "6461:431:7",
																"statements": [
																	{
																		"nativeSrc": "6475:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6475:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6523:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6523:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6491:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6491:31:7"
																			},
																			"nativeSrc": "6491:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6479:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6479:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6542:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6542:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6565:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6565:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6593:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6593:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6575:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "6575:17:7"
																					},
																					"nativeSrc": "6575:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6575:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6561:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6561:3:7"
																			},
																			"nativeSrc": "6561:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6561:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6546:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6546:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6762:27:7",
																			"nodeType": "YulBlock",
																			"src": "6762:27:7",
																			"statements": [
																				{
																					"nativeSrc": "6764:23:7",
																					"nodeType": "YulAssignment",
																					"src": "6764:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6779:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "6779:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6764:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "6764:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6746:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6746:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6758:2:7",
																					"nodeType": "YulLiteral",
																					"src": "6758:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6743:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6743:2:7"
																			},
																			"nativeSrc": "6743:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:7"
																		},
																		"nativeSrc": "6740:49:7",
																		"nodeType": "YulIf",
																		"src": "6740:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6831:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "6831:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6848:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6848:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6876:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6876:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6858:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "6858:17:7"
																							},
																							"nativeSrc": "6858:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6858:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6844:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6844:3:7"
																					},
																					"nativeSrc": "6844:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6844:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6802:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "6802:28:7"
																			},
																			"nativeSrc": "6802:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6802:80:7"
																		},
																		"nativeSrc": "6802:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6802:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6452:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6452:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6457:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6449:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6449:2:7"
																},
																"nativeSrc": "6449:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6449:11:7"
															},
															"nativeSrc": "6446:446:7",
															"nodeType": "YulIf",
															"src": "6446:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6356:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6411:5:7",
														"nodeType": "YulTypedName",
														"src": "6411:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6418:3:7",
														"nodeType": "YulTypedName",
														"src": "6418:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6423:10:7",
														"nodeType": "YulTypedName",
														"src": "6423:10:7",
														"type": ""
													}
												],
												"src": "6356:543:7"
											},
											{
												"body": {
													"nativeSrc": "6968:54:7",
													"nodeType": "YulBlock",
													"src": "6968:54:7",
													"statements": [
														{
															"nativeSrc": "6978:37:7",
															"nodeType": "YulAssignment",
															"src": "6978:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7003:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7003:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7009:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7009:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6999:3:7"
																},
																"nativeSrc": "6999:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6999:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6978:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6978:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6905:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6943:4:7",
														"nodeType": "YulTypedName",
														"src": "6943:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6949:5:7",
														"nodeType": "YulTypedName",
														"src": "6949:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6959:8:7",
														"nodeType": "YulTypedName",
														"src": "6959:8:7",
														"type": ""
													}
												],
												"src": "6905:117:7"
											},
											{
												"body": {
													"nativeSrc": "7079:118:7",
													"nodeType": "YulBlock",
													"src": "7079:118:7",
													"statements": [
														{
															"nativeSrc": "7089:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7089:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7141:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7141:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7134:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:7"
																				},
																				"nativeSrc": "7134:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7153:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7153:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7149:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7149:3:7"
																				},
																				"nativeSrc": "7149:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7149:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7105:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7105:28:7"
																		},
																		"nativeSrc": "7105:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:7"
																},
																"nativeSrc": "7101:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7101:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7093:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7093:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7166:25:7",
															"nodeType": "YulAssignment",
															"src": "7166:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7180:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7180:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7186:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7186:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7176:3:7"
																},
																"nativeSrc": "7176:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7176:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7166:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7028:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7056:4:7",
														"nodeType": "YulTypedName",
														"src": "7056:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7062:5:7",
														"nodeType": "YulTypedName",
														"src": "7062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7072:6:7",
														"nodeType": "YulTypedName",
														"src": "7072:6:7",
														"type": ""
													}
												],
												"src": "7028:169:7"
											},
											{
												"body": {
													"nativeSrc": "7283:214:7",
													"nodeType": "YulBlock",
													"src": "7283:214:7",
													"statements": [
														{
															"nativeSrc": "7416:37:7",
															"nodeType": "YulAssignment",
															"src": "7416:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7443:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7443:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7449:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7449:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7424:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7424:18:7"
																},
																"nativeSrc": "7424:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7424:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7416:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7416:4:7"
																}
															]
														},
														{
															"nativeSrc": "7462:29:7",
															"nodeType": "YulAssignment",
															"src": "7462:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7473:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7473:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7486:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7486:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7479:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:7"
																		},
																		"nativeSrc": "7479:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7479:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7470:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7470:2:7"
																},
																"nativeSrc": "7470:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7470:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7462:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7462:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7202:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7264:4:7",
														"nodeType": "YulTypedName",
														"src": "7264:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7270:3:7",
														"nodeType": "YulTypedName",
														"src": "7270:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7278:4:7",
														"nodeType": "YulTypedName",
														"src": "7278:4:7",
														"type": ""
													}
												],
												"src": "7202:295:7"
											},
											{
												"body": {
													"nativeSrc": "7594:1303:7",
													"nodeType": "YulBlock",
													"src": "7594:1303:7",
													"statements": [
														{
															"nativeSrc": "7605:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7605:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7652:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7619:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "7619:32:7"
																},
																"nativeSrc": "7619:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7619:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7609:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7609:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7741:22:7",
																"nodeType": "YulBlock",
																"src": "7741:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7743:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7743:16:7"
																			},
																			"nativeSrc": "7743:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7743:18:7"
																		},
																		"nativeSrc": "7743:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7743:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7713:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7713:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7721:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7721:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7710:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7710:2:7"
																},
																"nativeSrc": "7710:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7710:30:7"
															},
															"nativeSrc": "7707:56:7",
															"nodeType": "YulIf",
															"src": "7707:56:7"
														},
														{
															"nativeSrc": "7773:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7773:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7819:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7819:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7813:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7813:5:7"
																		},
																		"nativeSrc": "7813:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7787:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "7787:25:7"
																},
																"nativeSrc": "7787:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7787:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7777:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7777:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7918:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7932:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7872:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "7872:45:7"
																},
																"nativeSrc": "7872:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7872:67:7"
															},
															"nativeSrc": "7872:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7872:67:7"
														},
														{
															"nativeSrc": "7949:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7949:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7966:1:7",
																"nodeType": "YulLiteral",
																"src": "7966:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7953:9:7",
																	"nodeType": "YulTypedName",
																	"src": "7953:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7977:17:7",
															"nodeType": "YulAssignment",
															"src": "7977:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7990:4:7",
																"nodeType": "YulLiteral",
																"src": "7990:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7977:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7977:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8041:611:7",
																		"nodeType": "YulBlock",
																		"src": "8041:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8055:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8055:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8074:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8074:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8086:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8086:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8082:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8082:3:7"
																							},
																							"nativeSrc": "8082:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8082:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8070:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8070:3:7"
																					},
																					"nativeSrc": "8070:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8070:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8059:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8059:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8106:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8106:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8152:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8120:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8120:31:7"
																					},
																					"nativeSrc": "8120:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8120:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8110:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8110:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8170:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8170:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8179:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8179:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8174:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8174:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8238:163:7",
																					"nodeType": "YulBlock",
																					"src": "8238:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8263:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8263:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8281:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8281:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8286:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8286:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8277:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8277:3:7"
																												},
																												"nativeSrc": "8277:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8277:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8271:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8271:5:7"
																										},
																										"nativeSrc": "8271:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8271:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8256:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8256:6:7"
																								},
																								"nativeSrc": "8256:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8256:42:7"
																							},
																							"nativeSrc": "8256:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8256:42:7"
																						},
																						{
																							"nativeSrc": "8315:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8315:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8329:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8329:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8337:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8337:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8325:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8325:3:7"
																								},
																								"nativeSrc": "8325:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8325:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8315:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8315:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8356:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8356:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8373:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8373:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8384:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8384:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8369:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8369:3:7"
																								},
																								"nativeSrc": "8369:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8369:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8356:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8356:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8204:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8204:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8207:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8207:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8201:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8201:2:7"
																					},
																					"nativeSrc": "8201:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8201:14:7"
																				},
																				"nativeSrc": "8193:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8216:21:7",
																					"nodeType": "YulBlock",
																					"src": "8216:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8218:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8218:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8227:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8227:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8230:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8230:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8223:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8223:3:7"
																								},
																								"nativeSrc": "8223:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8223:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8218:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8218:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8197:3:7",
																					"nodeType": "YulBlock",
																					"src": "8197:3:7",
																					"statements": []
																				},
																				"src": "8193:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8437:156:7",
																					"nodeType": "YulBlock",
																					"src": "8437:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8455:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8455:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8482:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8482:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8487:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8487:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8478:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8478:3:7"
																										},
																										"nativeSrc": "8478:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8478:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8472:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8472:5:7"
																								},
																								"nativeSrc": "8472:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8472:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8459:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8459:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8522:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8522:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8549:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8549:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8564:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8564:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8572:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8572:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8560:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8560:3:7"
																												},
																												"nativeSrc": "8560:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8560:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8530:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8530:18:7"
																										},
																										"nativeSrc": "8530:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8530:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8515:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8515:6:7"
																								},
																								"nativeSrc": "8515:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8515:64:7"
																							},
																							"nativeSrc": "8515:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8515:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8420:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8420:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8429:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8429:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8417:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8417:2:7"
																					},
																					"nativeSrc": "8417:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8417:19:7"
																				},
																				"nativeSrc": "8414:179:7",
																				"nodeType": "YulIf",
																				"src": "8414:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8613:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8613:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8627:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "8627:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8635:1:7",
																											"nodeType": "YulLiteral",
																											"src": "8635:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8623:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "8623:3:7"
																									},
																									"nativeSrc": "8623:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "8623:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8639:1:7",
																									"nodeType": "YulLiteral",
																									"src": "8639:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8619:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8619:3:7"
																							},
																							"nativeSrc": "8619:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8619:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8606:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8606:6:7"
																					},
																					"nativeSrc": "8606:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8606:36:7"
																				},
																				"nativeSrc": "8606:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8606:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8034:618:7",
																	"nodeType": "YulCase",
																	"src": "8034:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8039:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8039:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8669:222:7",
																		"nodeType": "YulBlock",
																		"src": "8669:222:7",
																		"statements": [
																			{
																				"nativeSrc": "8683:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8683:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8696:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8696:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8687:5:7",
																						"nodeType": "YulTypedName",
																						"src": "8687:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8720:67:7",
																					"nodeType": "YulBlock",
																					"src": "8720:67:7",
																					"statements": [
																						{
																							"nativeSrc": "8738:35:7",
																							"nodeType": "YulAssignment",
																							"src": "8738:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8757:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8757:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8762:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8762:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8753:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8753:3:7"
																										},
																										"nativeSrc": "8753:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8753:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8747:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8747:5:7"
																								},
																								"nativeSrc": "8747:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8747:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8738:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8738:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8713:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8713:6:7"
																				},
																				"nativeSrc": "8710:77:7",
																				"nodeType": "YulIf",
																				"src": "8710:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8807:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8807:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8866:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8866:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8873:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8873:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8813:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "8813:52:7"
																							},
																							"nativeSrc": "8813:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8813:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8800:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8800:6:7"
																					},
																					"nativeSrc": "8800:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8800:81:7"
																				},
																				"nativeSrc": "8800:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8800:81:7"
																			}
																		]
																	},
																	"nativeSrc": "8661:230:7",
																	"nodeType": "YulCase",
																	"src": "8661:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8014:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8014:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8022:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8011:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8011:2:7"
																},
																"nativeSrc": "8011:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8011:14:7"
															},
															"nativeSrc": "8004:887:7",
															"nodeType": "YulSwitch",
															"src": "8004:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7502:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7583:4:7",
														"nodeType": "YulTypedName",
														"src": "7583:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7589:3:7",
														"nodeType": "YulTypedName",
														"src": "7589:3:7",
														"type": ""
													}
												],
												"src": "7502:1395:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516117f63803806117f683398181016040528101906100319190610222565b826001908161004091906104ae565b50816002908161005091906104ae565b50805f819055505f5460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050505061057d565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610101826100bb565b810181811067ffffffffffffffff821117156101205761011f6100cb565b5b80604052505050565b5f6101326100a2565b905061013e82826100f8565b919050565b5f67ffffffffffffffff82111561015d5761015c6100cb565b5b610166826100bb565b9050602081019050919050565b8281835e5f83830152505050565b5f61019361018e84610143565b610129565b9050828152602081018484840111156101af576101ae6100b7565b5b6101ba848285610173565b509392505050565b5f82601f8301126101d6576101d56100b3565b5b81516101e6848260208601610181565b91505092915050565b5f819050919050565b610201816101ef565b811461020b575f80fd5b50565b5f8151905061021c816101f8565b92915050565b5f805f60608486031215610239576102386100ab565b5b5f84015167ffffffffffffffff811115610256576102556100af565b5b610262868287016101c2565b935050602084015167ffffffffffffffff811115610283576102826100af565b5b61028f868287016101c2565b92505060406102a08682870161020e565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102f857607f821691505b60208210810361030b5761030a6102b4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261036d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610332565b6103778683610332565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6103b26103ad6103a8846101ef565b61038f565b6101ef565b9050919050565b5f819050919050565b6103cb83610398565b6103df6103d7826103b9565b84845461033e565b825550505050565b5f90565b6103f36103e7565b6103fe8184846103c2565b505050565b5b81811015610421576104165f826103eb565b600181019050610404565b5050565b601f8211156104665761043781610311565b61044084610323565b8101602085101561044f578190505b61046361045b85610323565b830182610403565b50505b505050565b5f82821c905092915050565b5f6104865f198460080261046b565b1980831691505092915050565b5f61049e8383610477565b9150826002028217905092915050565b6104b7826102aa565b67ffffffffffffffff8111156104d0576104cf6100cb565b5b6104da82546102e1565b6104e5828285610425565b5f60209050601f831160018114610516575f8415610504578287015190505b61050e8582610493565b865550610575565b601f19841661052486610311565b5f5b8281101561054b57848901518255600182019150602085019450602081019050610526565b868310156105685784890151610564601f891682610477565b8355505b6001600288020188555050505b505050505050565b61126c8061058a5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610eb2565b60405180910390f35b6100cd60048036038101906100c89190610f63565b61028d565b6040516100da9190610fbb565b60405180910390f35b6100eb6102a3565b6040516100f89190610fe3565b60405180910390f35b61011b60048036038101906101169190610ffc565b6102ab565b6040516101289190610fbb565b60405180910390f35b610139610375565b6040516101469190611067565b60405180910390f35b61016960048036038101906101649190611080565b61037d565b6040516101769190610fe3565b60405180910390f35b6101876103c3565b6040516101949190610eb2565b60405180910390f35b6101b760048036038101906101b29190610f63565b610453565b6040516101c49190610fbb565b60405180910390f35b6101e760048036038101906101e291906110ab565b610469565b6040516101f49190610fe3565b60405180910390f35b60606001805461020c90611116565b80601f016020809104026020016040519081016040528092919081815260200182805461023890611116565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f6102993384846104eb565b6001905092915050565b5f8054905090565b5f80600190503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146102f2576102ef8585856106b2565b90505b80156103055761030385858561092a565b505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516103629190610fe3565b60405180910390a3809150509392505050565b5f6012905090565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600280546103d290611116565b80601f01602080910402602001604051908101604052809291908181526020018280546103fe90611116565b80156104495780601f1061042057610100808354040283529160200191610449565b820191905f5260205f20905b81548152906001019060200180831161042c57829003601f168201915b5050505050905090565b5f61045f338484610b7f565b6001905092915050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361055b57816040517fa1cb86590000000000000000000000000000000000000000000000000000000081526004016105529190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105cb57826040517f01e4f9540000000000000000000000000000000000000000000000000000000081526004016105c29190611155565b60405180910390fd5b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516106a59190610fe3565b60405180910390a3505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361072357836040517f69ec708200000000000000000000000000000000000000000000000000000000815260040161071a9190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361079357826040517f4a149d0800000000000000000000000000000000000000000000000000000000815260040161078a9190611155565b60405180910390fd5b8160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610891578360035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054836040517fdb42144d0000000000000000000000000000000000000000000000000000000081526004016108889392919061116e565b60405180910390fd5b8160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461091891906111d0565b92505081905550600190509392505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361099b57836040517f69ec70820000000000000000000000000000000000000000000000000000000081526004016109929190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a0b57826040517f4a149d08000000000000000000000000000000000000000000000000000000008152600401610a029190611155565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610ace578360035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054836040517fdb42144d000000000000000000000000000000000000000000000000000000008152600401610ac59392919061116e565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b1a91906111d0565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b6d9190611203565b92505081905550600190509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bef57826040517f69ec7082000000000000000000000000000000000000000000000000000000008152600401610be69190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5f57816040517f4a149d08000000000000000000000000000000000000000000000000000000008152600401610c569190611155565b60405180910390fd5b610c6a838383610c6f565b505050565b8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610d32578260035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826040517fdb42144d000000000000000000000000000000000000000000000000000000008152600401610d299392919061116e565b60405180910390fd5b8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7e91906111d0565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610dd19190611203565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e359190610fe3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e8482610e42565b610e8e8185610e4c565b9350610e9e818560208601610e5c565b610ea781610e6a565b840191505092915050565b5f6020820190508181035f830152610eca8184610e7a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eff82610ed6565b9050919050565b610f0f81610ef5565b8114610f19575f80fd5b50565b5f81359050610f2a81610f06565b92915050565b5f819050919050565b610f4281610f30565b8114610f4c575f80fd5b50565b5f81359050610f5d81610f39565b92915050565b5f8060408385031215610f7957610f78610ed2565b5b5f610f8685828601610f1c565b9250506020610f9785828601610f4f565b9150509250929050565b5f8115159050919050565b610fb581610fa1565b82525050565b5f602082019050610fce5f830184610fac565b92915050565b610fdd81610f30565b82525050565b5f602082019050610ff65f830184610fd4565b92915050565b5f805f6060848603121561101357611012610ed2565b5b5f61102086828701610f1c565b935050602061103186828701610f1c565b925050604061104286828701610f4f565b9150509250925092565b5f60ff82169050919050565b6110618161104c565b82525050565b5f60208201905061107a5f830184611058565b92915050565b5f6020828403121561109557611094610ed2565b5b5f6110a284828501610f1c565b91505092915050565b5f80604083850312156110c1576110c0610ed2565b5b5f6110ce85828601610f1c565b92505060206110df85828601610f1c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061112d57607f821691505b6020821081036111405761113f6110e9565b5b50919050565b61114f81610ef5565b82525050565b5f6020820190506111685f830184611146565b92915050565b5f6060820190506111815f830186611146565b61118e6020830185610fd4565b61119b6040830184610fd4565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111da82610f30565b91506111e583610f30565b92508282039050818111156111fd576111fc6111a3565b5b92915050565b5f61120d82610f30565b915061121883610f30565b92508282019050808211156112305761122f6111a3565b5b9291505056fea26469706673582212201a74f2ed5f6daf10c226aa3d48291afb14022ada6c30b3bccf137bcf87ddc28064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17F6 CODESIZE SUB DUP1 PUSH2 0x17F6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x222 JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x40 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST POP DUP1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 SLOAD PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x57D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x101 DUP3 PUSH2 0xBB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x120 JUMPI PUSH2 0x11F PUSH2 0xCB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x132 PUSH2 0xA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x13E DUP3 DUP3 PUSH2 0xF8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0xCB JUMP JUMPDEST JUMPDEST PUSH2 0x166 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x193 PUSH2 0x18E DUP5 PUSH2 0x143 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x1AE PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA DUP5 DUP3 DUP6 PUSH2 0x173 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D6 JUMPI PUSH2 0x1D5 PUSH2 0xB3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1E6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x181 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201 DUP2 PUSH2 0x1EF JUMP JUMPDEST DUP2 EQ PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21C DUP2 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x239 JUMPI PUSH2 0x238 PUSH2 0xAB JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x256 JUMPI PUSH2 0x255 PUSH2 0xAF JUMP JUMPDEST JUMPDEST PUSH2 0x262 DUP7 DUP3 DUP8 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0xAF JUMP JUMPDEST JUMPDEST PUSH2 0x28F DUP7 DUP3 DUP8 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A0 DUP7 DUP3 DUP8 ADD PUSH2 0x20E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2F8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0x2B4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x36D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x332 JUMP JUMPDEST PUSH2 0x377 DUP7 DUP4 PUSH2 0x332 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B2 PUSH2 0x3AD PUSH2 0x3A8 DUP5 PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CB DUP4 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x3D7 DUP3 PUSH2 0x3B9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x33E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x3FE DUP2 DUP5 DUP5 PUSH2 0x3C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x421 JUMPI PUSH2 0x416 PUSH0 DUP3 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x404 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x466 JUMPI PUSH2 0x437 DUP2 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x440 DUP5 PUSH2 0x323 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x44F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x463 PUSH2 0x45B DUP6 PUSH2 0x323 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x403 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x486 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x46B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x49E DUP4 DUP4 PUSH2 0x477 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4B7 DUP3 PUSH2 0x2AA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4CF PUSH2 0xCB JUMP JUMPDEST JUMPDEST PUSH2 0x4DA DUP3 SLOAD PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x4E5 DUP3 DUP3 DUP6 PUSH2 0x425 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x516 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x504 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x50E DUP6 DUP3 PUSH2 0x493 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x575 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x524 DUP7 PUSH2 0x311 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x54B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x526 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x568 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x564 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x477 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x126C DUP1 PUSH2 0x58A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x299 CALLER DUP5 DUP5 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F2 JUMPI PUSH2 0x2EF DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x305 JUMPI PUSH2 0x303 DUP6 DUP6 DUP6 PUSH2 0x92A JUMP JUMPDEST POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3D2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FE SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x449 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x420 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x449 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45F CALLER DUP5 DUP5 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA1CB865900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x1E4F95400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x69EC708200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x793 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A149D0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x891 JUMPI DUP4 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH32 0xDB42144D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x888 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x69EC708200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x992 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A149D0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xACE JUMPI DUP4 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH32 0xDB42144D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBEF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x69EC708200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4A149D0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6A DUP4 DUP4 DUP4 PUSH2 0xC6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xD32 JUMPI DUP3 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH32 0xDB42144D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE84 DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0xE8E DUP2 DUP6 PUSH2 0xE4C JUMP JUMPDEST SWAP4 POP PUSH2 0xE9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE5C JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE6A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xECA DUP2 DUP5 PUSH2 0xE7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEFF DUP3 PUSH2 0xED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0F DUP2 PUSH2 0xEF5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF2A DUP2 PUSH2 0xF06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF42 DUP2 PUSH2 0xF30 JUMP JUMPDEST DUP2 EQ PUSH2 0xF4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF5D DUP2 PUSH2 0xF39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF78 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF86 DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF97 DUP6 DUP3 DUP7 ADD PUSH2 0xF4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB5 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH0 DUP4 ADD DUP5 PUSH2 0xFAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xF30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1013 JUMPI PUSH2 0x1012 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1020 DUP7 DUP3 DUP8 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1031 DUP7 DUP3 DUP8 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1042 DUP7 DUP3 DUP8 ADD PUSH2 0xF4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1061 DUP2 PUSH2 0x104C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107A PUSH0 DUP4 ADD DUP5 PUSH2 0x1058 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A2 DUP5 DUP3 DUP6 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C1 JUMPI PUSH2 0x10C0 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10CE DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10DF DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x112D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1140 JUMPI PUSH2 0x113F PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114F DUP2 PUSH2 0xEF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1168 PUSH0 DUP4 ADD DUP5 PUSH2 0x1146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1181 PUSH0 DUP4 ADD DUP7 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x118E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x119B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11DA DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E5 DUP4 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH2 0x11FC PUSH2 0x11A3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120D DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1218 DUP4 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x11A3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH21 0xF2ED5F6DAF10C226AA3D48291AFB14022ADA6C30B3 0xBC 0xCF SGT PUSH28 0xCF87DDC28064736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "177:4007:5:-:0;;;439:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;565:5;557;:13;;;;;;:::i;:::-;;590:7;580;:17;;;;;;:::i;:::-;;623:12;608;:27;;;;669:12;;645:9;:21;655:10;645:21;;;;;;;;;;;;;;;:36;;;;439:249;;;177:4007;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1009::-;3038:6;3046;3054;3103:2;3091:9;3082:7;3078:23;3074:32;3071:119;;;3109:79;;:::i;:::-;3071:119;3250:1;3239:9;3235:17;3229:24;3280:18;3272:6;3269:30;3266:117;;;3302:79;;:::i;:::-;3266:117;3407:74;3473:7;3464:6;3453:9;3449:22;3407:74;:::i;:::-;3397:84;;3200:291;3551:2;3540:9;3536:18;3530:25;3582:18;3574:6;3571:30;3568:117;;;3604:79;;:::i;:::-;3568:117;3709:74;3775:7;3766:6;3755:9;3751:22;3709:74;:::i;:::-;3699:84;;3501:292;3832:2;3858:64;3914:7;3905:6;3894:9;3890:22;3858:64;:::i;:::-;3848:74;;3803:129;2930:1009;;;;;:::o;3945:99::-;3997:6;4031:5;4025:12;4015:22;;3945:99;;;:::o;4050:180::-;4098:77;4095:1;4088:88;4195:4;4192:1;4185:15;4219:4;4216:1;4209:15;4236:320;4280:6;4317:1;4311:4;4307:12;4297:22;;4364:1;4358:4;4354:12;4385:18;4375:81;;4441:4;4433:6;4429:17;4419:27;;4375:81;4503:2;4495:6;4492:14;4472:18;4469:38;4466:84;;4522:18;;:::i;:::-;4466:84;4287:269;4236:320;;;:::o;4562:141::-;4611:4;4634:3;4626:11;;4657:3;4654:1;4647:14;4691:4;4688:1;4678:18;4670:26;;4562:141;;;:::o;4709:93::-;4746:6;4793:2;4788;4781:5;4777:14;4773:23;4763:33;;4709:93;;;:::o;4808:107::-;4852:8;4902:5;4896:4;4892:16;4871:37;;4808:107;;;;:::o;4921:393::-;4990:6;5040:1;5028:10;5024:18;5063:97;5093:66;5082:9;5063:97;:::i;:::-;5181:39;5211:8;5200:9;5181:39;:::i;:::-;5169:51;;5253:4;5249:9;5242:5;5238:21;5229:30;;5302:4;5292:8;5288:19;5281:5;5278:30;5268:40;;4997:317;;4921:393;;;;;:::o;5320:60::-;5348:3;5369:5;5362:12;;5320:60;;;:::o;5386:142::-;5436:9;5469:53;5487:34;5496:24;5514:5;5496:24;:::i;:::-;5487:34;:::i;:::-;5469:53;:::i;:::-;5456:66;;5386:142;;;:::o;5534:75::-;5577:3;5598:5;5591:12;;5534:75;;;:::o;5615:269::-;5725:39;5756:7;5725:39;:::i;:::-;5786:91;5835:41;5859:16;5835:41;:::i;:::-;5827:6;5820:4;5814:11;5786:91;:::i;:::-;5780:4;5773:105;5691:193;5615:269;;;:::o;5890:73::-;5935:3;5890:73;:::o;5969:189::-;6046:32;;:::i;:::-;6087:65;6145:6;6137;6131:4;6087:65;:::i;:::-;6022:136;5969:189;;:::o;6164:186::-;6224:120;6241:3;6234:5;6231:14;6224:120;;;6295:39;6332:1;6325:5;6295:39;:::i;:::-;6268:1;6261:5;6257:13;6248:22;;6224:120;;;6164:186;;:::o;6356:543::-;6457:2;6452:3;6449:11;6446:446;;;6491:38;6523:5;6491:38;:::i;:::-;6575:29;6593:10;6575:29;:::i;:::-;6565:8;6561:44;6758:2;6746:10;6743:18;6740:49;;;6779:8;6764:23;;6740:49;6802:80;6858:22;6876:3;6858:22;:::i;:::-;6848:8;6844:37;6831:11;6802:80;:::i;:::-;6461:431;;6446:446;6356:543;;;:::o;6905:117::-;6959:8;7009:5;7003:4;6999:16;6978:37;;6905:117;;;;:::o;7028:169::-;7072:6;7105:51;7153:1;7149:6;7141:5;7138:1;7134:13;7105:51;:::i;:::-;7101:56;7186:4;7180;7176:15;7166:25;;7079:118;7028:169;;;;:::o;7202:295::-;7278:4;7424:29;7449:3;7443:4;7424:29;:::i;:::-;7416:37;;7486:3;7483:1;7479:11;7473:4;7470:21;7462:29;;7202:295;;;;:::o;7502:1395::-;7619:37;7652:3;7619:37;:::i;:::-;7721:18;7713:6;7710:30;7707:56;;;7743:18;;:::i;:::-;7707:56;7787:38;7819:4;7813:11;7787:38;:::i;:::-;7872:67;7932:6;7924;7918:4;7872:67;:::i;:::-;7966:1;7990:4;7977:17;;8022:2;8014:6;8011:14;8039:1;8034:618;;;;8696:1;8713:6;8710:77;;;8762:9;8757:3;8753:19;8747:26;8738:35;;8710:77;8813:67;8873:6;8866:5;8813:67;:::i;:::-;8807:4;8800:81;8669:222;8004:887;;8034:618;8086:4;8082:9;8074:6;8070:22;8120:37;8152:4;8120:37;:::i;:::-;8179:1;8193:208;8207:7;8204:1;8201:14;8193:208;;;8286:9;8281:3;8277:19;8271:26;8263:6;8256:42;8337:1;8329:6;8325:14;8315:24;;8384:2;8373:9;8369:18;8356:31;;8230:4;8227:1;8223:12;8218:17;;8193:208;;;8429:6;8420:7;8417:19;8414:179;;;8487:9;8482:3;8478:19;8472:26;8530:48;8572:4;8564:6;8560:17;8549:9;8530:48;:::i;:::-;8522:6;8515:64;8437:156;8414:179;8639:1;8635;8627:6;8623:14;8619:22;8613:4;8606:36;8041:611;;;8004:887;;7594:1303;;;7502:1395;;:::o;177:4007:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1244": {
									"entryPoint": 1259,
									"id": 1244,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_988": {
									"entryPoint": 2943,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1031": {
									"entryPoint": 3183,
									"id": 1031,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1175": {
									"entryPoint": 1129,
									"id": 1175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1194": {
									"entryPoint": 653,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_882": {
									"entryPoint": 893,
									"id": 882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_862": {
									"entryPoint": 885,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_846": {
									"entryPoint": 509,
									"id": 846,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_854": {
									"entryPoint": 963,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_870": {
									"entryPoint": 675,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_929": {
									"entryPoint": 683,
									"id": 929,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_948": {
									"entryPoint": 1107,
									"id": 948,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateAllowance_1094": {
									"entryPoint": 1714,
									"id": 1094,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@updateBalances_1159": {
									"entryPoint": 2346,
									"id": 1159,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7453:7",
										"nodeType": "YulBlock",
										"src": "0:7453:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5164:391:7",
													"nodeType": "YulBlock",
													"src": "5164:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:7",
																"nodeType": "YulBlock",
																"src": "5210:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:7"
																			},
																			"nativeSrc": "5212:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:7"
																		},
																		"nativeSrc": "5212:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:7"
																		},
																		"nativeSrc": "5181:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:7"
																},
																"nativeSrc": "5177:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:7"
															},
															"nativeSrc": "5174:119:7",
															"nodeType": "YulIf",
															"src": "5174:119:7"
														},
														{
															"nativeSrc": "5303:117:7",
															"nodeType": "YulBlock",
															"src": "5303:117:7",
															"statements": [
																{
																	"nativeSrc": "5318:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:7"
																				},
																				"nativeSrc": "5378:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:7"
																		},
																		"nativeSrc": "5357:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:7",
															"nodeType": "YulBlock",
															"src": "5430:118:7",
															"statements": [
																{
																	"nativeSrc": "5445:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:7"
																				},
																				"nativeSrc": "5506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:7"
																		},
																		"nativeSrc": "5485:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:7",
														"nodeType": "YulTypedName",
														"src": "5126:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:7",
														"nodeType": "YulTypedName",
														"src": "5137:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:7",
														"nodeType": "YulTypedName",
														"src": "5149:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:7",
														"nodeType": "YulTypedName",
														"src": "5157:6:7",
														"type": ""
													}
												],
												"src": "5081:474:7"
											},
											{
												"body": {
													"nativeSrc": "5589:152:7",
													"nodeType": "YulBlock",
													"src": "5589:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:7"
																},
																"nativeSrc": "5599:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:7"
															},
															"nativeSrc": "5599:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:7"
																},
																"nativeSrc": "5696:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:7"
															},
															"nativeSrc": "5696:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:7"
																},
																"nativeSrc": "5720:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:7"
															},
															"nativeSrc": "5720:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:7"
											},
											{
												"body": {
													"nativeSrc": "5798:269:7",
													"nodeType": "YulBlock",
													"src": "5798:269:7",
													"statements": [
														{
															"nativeSrc": "5808:22:7",
															"nodeType": "YulAssignment",
															"src": "5808:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:7"
																},
																"nativeSrc": "5818:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:7"
																}
															]
														},
														{
															"nativeSrc": "5839:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:7"
																},
																"nativeSrc": "5865:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:7",
																"nodeType": "YulBlock",
																"src": "5916:51:7",
																"statements": [
																	{
																		"nativeSrc": "5930:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:7"
																			},
																			"nativeSrc": "5940:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:7"
																},
																"nativeSrc": "5889:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:7"
															},
															"nativeSrc": "5886:81:7",
															"nodeType": "YulIf",
															"src": "5886:81:7"
														},
														{
															"body": {
																"nativeSrc": "6019:42:7",
																"nodeType": "YulBlock",
																"src": "6019:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:7"
																			},
																			"nativeSrc": "6033:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:7"
																		},
																		"nativeSrc": "6033:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:7"
																		},
																		"nativeSrc": "6003:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:7"
																},
																"nativeSrc": "5980:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:7"
															},
															"nativeSrc": "5977:84:7",
															"nodeType": "YulIf",
															"src": "5977:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:7",
														"nodeType": "YulTypedName",
														"src": "5782:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:7",
														"nodeType": "YulTypedName",
														"src": "5791:6:7",
														"type": ""
													}
												],
												"src": "5747:320:7"
											},
											{
												"body": {
													"nativeSrc": "6138:53:7",
													"nodeType": "YulBlock",
													"src": "6138:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6155:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6178:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6178:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6160:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6160:17:7"
																		},
																		"nativeSrc": "6160:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:7"
																},
																"nativeSrc": "6148:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6148:37:7"
															},
															"nativeSrc": "6148:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6148:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6073:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6126:5:7",
														"nodeType": "YulTypedName",
														"src": "6126:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6133:3:7",
														"nodeType": "YulTypedName",
														"src": "6133:3:7",
														"type": ""
													}
												],
												"src": "6073:118:7"
											},
											{
												"body": {
													"nativeSrc": "6295:124:7",
													"nodeType": "YulBlock",
													"src": "6295:124:7",
													"statements": [
														{
															"nativeSrc": "6305:26:7",
															"nodeType": "YulAssignment",
															"src": "6305:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6317:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6317:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6328:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6328:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6313:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6313:3:7"
																},
																"nativeSrc": "6313:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6313:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6305:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6305:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6385:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6385:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6398:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6398:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6409:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6409:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6394:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:7"
																		},
																		"nativeSrc": "6394:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6394:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6341:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6341:43:7"
																},
																"nativeSrc": "6341:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6341:71:7"
															},
															"nativeSrc": "6341:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6341:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6197:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6267:9:7",
														"nodeType": "YulTypedName",
														"src": "6267:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6279:6:7",
														"nodeType": "YulTypedName",
														"src": "6279:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6290:4:7",
														"nodeType": "YulTypedName",
														"src": "6290:4:7",
														"type": ""
													}
												],
												"src": "6197:222:7"
											},
											{
												"body": {
													"nativeSrc": "6579:288:7",
													"nodeType": "YulBlock",
													"src": "6579:288:7",
													"statements": [
														{
															"nativeSrc": "6589:26:7",
															"nodeType": "YulAssignment",
															"src": "6589:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6612:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:7"
																},
																"nativeSrc": "6597:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6597:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6589:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6669:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6669:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6693:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6693:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6678:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:7"
																		},
																		"nativeSrc": "6678:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6625:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6625:43:7"
																},
																"nativeSrc": "6625:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6625:71:7"
															},
															"nativeSrc": "6625:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6625:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6750:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6750:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6763:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6763:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6774:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6774:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6759:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:7"
																		},
																		"nativeSrc": "6759:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6706:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6706:43:7"
																},
																"nativeSrc": "6706:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6706:72:7"
															},
															"nativeSrc": "6706:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6706:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6832:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6832:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6845:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6856:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6841:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:7"
																		},
																		"nativeSrc": "6841:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6788:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6788:43:7"
																},
																"nativeSrc": "6788:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6788:72:7"
															},
															"nativeSrc": "6788:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6788:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6425:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6535:9:7",
														"nodeType": "YulTypedName",
														"src": "6535:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6547:6:7",
														"nodeType": "YulTypedName",
														"src": "6547:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6555:6:7",
														"nodeType": "YulTypedName",
														"src": "6555:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6563:6:7",
														"nodeType": "YulTypedName",
														"src": "6563:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6574:4:7",
														"nodeType": "YulTypedName",
														"src": "6574:4:7",
														"type": ""
													}
												],
												"src": "6425:442:7"
											},
											{
												"body": {
													"nativeSrc": "6901:152:7",
													"nodeType": "YulBlock",
													"src": "6901:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:7"
																},
																"nativeSrc": "6911:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:7"
															},
															"nativeSrc": "6911:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:7"
																},
																"nativeSrc": "7008:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:7"
															},
															"nativeSrc": "7008:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:7"
																},
																"nativeSrc": "7032:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:7"
															},
															"nativeSrc": "7032:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6873:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:7"
											},
											{
												"body": {
													"nativeSrc": "7104:149:7",
													"nodeType": "YulBlock",
													"src": "7104:149:7",
													"statements": [
														{
															"nativeSrc": "7114:25:7",
															"nodeType": "YulAssignment",
															"src": "7114:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7137:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7137:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7119:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7119:17:7"
																},
																"nativeSrc": "7119:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7119:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7114:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7114:1:7"
																}
															]
														},
														{
															"nativeSrc": "7148:25:7",
															"nodeType": "YulAssignment",
															"src": "7148:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7171:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7171:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7153:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7153:17:7"
																},
																"nativeSrc": "7153:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7153:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7148:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7148:1:7"
																}
															]
														},
														{
															"nativeSrc": "7182:17:7",
															"nodeType": "YulAssignment",
															"src": "7182:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7194:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7194:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7197:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7197:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:7"
																},
																"nativeSrc": "7190:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7190:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7224:22:7",
																"nodeType": "YulBlock",
																"src": "7224:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7226:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7226:16:7"
																			},
																			"nativeSrc": "7226:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7226:18:7"
																		},
																		"nativeSrc": "7226:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7226:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7215:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7215:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7221:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7221:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7212:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7212:2:7"
																},
																"nativeSrc": "7212:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7212:11:7"
															},
															"nativeSrc": "7209:37:7",
															"nodeType": "YulIf",
															"src": "7209:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7059:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7090:1:7",
														"nodeType": "YulTypedName",
														"src": "7090:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7093:1:7",
														"nodeType": "YulTypedName",
														"src": "7093:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7099:4:7",
														"nodeType": "YulTypedName",
														"src": "7099:4:7",
														"type": ""
													}
												],
												"src": "7059:194:7"
											},
											{
												"body": {
													"nativeSrc": "7303:147:7",
													"nodeType": "YulBlock",
													"src": "7303:147:7",
													"statements": [
														{
															"nativeSrc": "7313:25:7",
															"nodeType": "YulAssignment",
															"src": "7313:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7336:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7336:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7318:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7318:17:7"
																},
																"nativeSrc": "7318:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7318:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7313:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7313:1:7"
																}
															]
														},
														{
															"nativeSrc": "7347:25:7",
															"nodeType": "YulAssignment",
															"src": "7347:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7370:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7370:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7352:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7352:17:7"
																},
																"nativeSrc": "7352:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7352:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7347:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7347:1:7"
																}
															]
														},
														{
															"nativeSrc": "7381:16:7",
															"nodeType": "YulAssignment",
															"src": "7381:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7392:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7392:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7395:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7395:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7388:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7388:3:7"
																},
																"nativeSrc": "7388:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7388:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7381:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7421:22:7",
																"nodeType": "YulBlock",
																"src": "7421:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7423:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7423:16:7"
																			},
																			"nativeSrc": "7423:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7423:18:7"
																		},
																		"nativeSrc": "7423:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7423:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7413:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7413:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7416:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7416:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7410:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7410:2:7"
																},
																"nativeSrc": "7410:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7410:10:7"
															},
															"nativeSrc": "7407:36:7",
															"nodeType": "YulIf",
															"src": "7407:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7259:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7290:1:7",
														"nodeType": "YulTypedName",
														"src": "7290:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7293:1:7",
														"nodeType": "YulTypedName",
														"src": "7293:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7299:3:7",
														"nodeType": "YulTypedName",
														"src": "7299:3:7",
														"type": ""
													}
												],
												"src": "7259:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610eb2565b60405180910390f35b6100cd60048036038101906100c89190610f63565b61028d565b6040516100da9190610fbb565b60405180910390f35b6100eb6102a3565b6040516100f89190610fe3565b60405180910390f35b61011b60048036038101906101169190610ffc565b6102ab565b6040516101289190610fbb565b60405180910390f35b610139610375565b6040516101469190611067565b60405180910390f35b61016960048036038101906101649190611080565b61037d565b6040516101769190610fe3565b60405180910390f35b6101876103c3565b6040516101949190610eb2565b60405180910390f35b6101b760048036038101906101b29190610f63565b610453565b6040516101c49190610fbb565b60405180910390f35b6101e760048036038101906101e291906110ab565b610469565b6040516101f49190610fe3565b60405180910390f35b60606001805461020c90611116565b80601f016020809104026020016040519081016040528092919081815260200182805461023890611116565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f6102993384846104eb565b6001905092915050565b5f8054905090565b5f80600190503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146102f2576102ef8585856106b2565b90505b80156103055761030385858561092a565b505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516103629190610fe3565b60405180910390a3809150509392505050565b5f6012905090565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600280546103d290611116565b80601f01602080910402602001604051908101604052809291908181526020018280546103fe90611116565b80156104495780601f1061042057610100808354040283529160200191610449565b820191905f5260205f20905b81548152906001019060200180831161042c57829003601f168201915b5050505050905090565b5f61045f338484610b7f565b6001905092915050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361055b57816040517fa1cb86590000000000000000000000000000000000000000000000000000000081526004016105529190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105cb57826040517f01e4f9540000000000000000000000000000000000000000000000000000000081526004016105c29190611155565b60405180910390fd5b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516106a59190610fe3565b60405180910390a3505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361072357836040517f69ec708200000000000000000000000000000000000000000000000000000000815260040161071a9190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361079357826040517f4a149d0800000000000000000000000000000000000000000000000000000000815260040161078a9190611155565b60405180910390fd5b8160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610891578360035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054836040517fdb42144d0000000000000000000000000000000000000000000000000000000081526004016108889392919061116e565b60405180910390fd5b8160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461091891906111d0565b92505081905550600190509392505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361099b57836040517f69ec70820000000000000000000000000000000000000000000000000000000081526004016109929190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a0b57826040517f4a149d08000000000000000000000000000000000000000000000000000000008152600401610a029190611155565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610ace578360035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054836040517fdb42144d000000000000000000000000000000000000000000000000000000008152600401610ac59392919061116e565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b1a91906111d0565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b6d9190611203565b92505081905550600190509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bef57826040517f69ec7082000000000000000000000000000000000000000000000000000000008152600401610be69190611155565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5f57816040517f4a149d08000000000000000000000000000000000000000000000000000000008152600401610c569190611155565b60405180910390fd5b610c6a838383610c6f565b505050565b8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610d32578260035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826040517fdb42144d000000000000000000000000000000000000000000000000000000008152600401610d299392919061116e565b60405180910390fd5b8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7e91906111d0565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610dd19190611203565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e359190610fe3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e8482610e42565b610e8e8185610e4c565b9350610e9e818560208601610e5c565b610ea781610e6a565b840191505092915050565b5f6020820190508181035f830152610eca8184610e7a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eff82610ed6565b9050919050565b610f0f81610ef5565b8114610f19575f80fd5b50565b5f81359050610f2a81610f06565b92915050565b5f819050919050565b610f4281610f30565b8114610f4c575f80fd5b50565b5f81359050610f5d81610f39565b92915050565b5f8060408385031215610f7957610f78610ed2565b5b5f610f8685828601610f1c565b9250506020610f9785828601610f4f565b9150509250929050565b5f8115159050919050565b610fb581610fa1565b82525050565b5f602082019050610fce5f830184610fac565b92915050565b610fdd81610f30565b82525050565b5f602082019050610ff65f830184610fd4565b92915050565b5f805f6060848603121561101357611012610ed2565b5b5f61102086828701610f1c565b935050602061103186828701610f1c565b925050604061104286828701610f4f565b9150509250925092565b5f60ff82169050919050565b6110618161104c565b82525050565b5f60208201905061107a5f830184611058565b92915050565b5f6020828403121561109557611094610ed2565b5b5f6110a284828501610f1c565b91505092915050565b5f80604083850312156110c1576110c0610ed2565b5b5f6110ce85828601610f1c565b92505060206110df85828601610f1c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061112d57607f821691505b6020821081036111405761113f6110e9565b5b50919050565b61114f81610ef5565b82525050565b5f6020820190506111685f830184611146565b92915050565b5f6060820190506111815f830186611146565b61118e6020830185610fd4565b61119b6040830184610fd4565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111da82610f30565b91506111e583610f30565b92508282039050818111156111fd576111fc6111a3565b5b92915050565b5f61120d82610f30565b915061121883610f30565b92508282019050808211156112305761122f6111a3565b5b9291505056fea26469706673582212201a74f2ed5f6daf10c226aa3d48291afb14022ada6c30b3bccf137bcf87ddc28064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x299 CALLER DUP5 DUP5 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F2 JUMPI PUSH2 0x2EF DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x305 JUMPI PUSH2 0x303 DUP6 DUP6 DUP6 PUSH2 0x92A JUMP JUMPDEST POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3D2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FE SWAP1 PUSH2 0x1116 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x449 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x420 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x449 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45F CALLER DUP5 DUP5 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA1CB865900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x1E4F95400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x69EC708200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x793 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A149D0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x891 JUMPI DUP4 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH32 0xDB42144D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x888 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x69EC708200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x992 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A149D0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xACE JUMPI DUP4 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH32 0xDB42144D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBEF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x69EC708200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4A149D0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6A DUP4 DUP4 DUP4 PUSH2 0xC6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xD32 JUMPI DUP3 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH32 0xDB42144D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE84 DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0xE8E DUP2 DUP6 PUSH2 0xE4C JUMP JUMPDEST SWAP4 POP PUSH2 0xE9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE5C JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE6A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xECA DUP2 DUP5 PUSH2 0xE7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEFF DUP3 PUSH2 0xED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0F DUP2 PUSH2 0xEF5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF2A DUP2 PUSH2 0xF06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF42 DUP2 PUSH2 0xF30 JUMP JUMPDEST DUP2 EQ PUSH2 0xF4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF5D DUP2 PUSH2 0xF39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF78 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF86 DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF97 DUP6 DUP3 DUP7 ADD PUSH2 0xF4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB5 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH0 DUP4 ADD DUP5 PUSH2 0xFAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xF30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1013 JUMPI PUSH2 0x1012 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1020 DUP7 DUP3 DUP8 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1031 DUP7 DUP3 DUP8 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1042 DUP7 DUP3 DUP8 ADD PUSH2 0xF4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1061 DUP2 PUSH2 0x104C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107A PUSH0 DUP4 ADD DUP5 PUSH2 0x1058 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A2 DUP5 DUP3 DUP6 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C1 JUMPI PUSH2 0x10C0 PUSH2 0xED2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10CE DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10DF DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x112D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1140 JUMPI PUSH2 0x113F PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114F DUP2 PUSH2 0xEF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1168 PUSH0 DUP4 ADD DUP5 PUSH2 0x1146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1181 PUSH0 DUP4 ADD DUP7 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x118E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x119B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11DA DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E5 DUP4 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH2 0x11FC PUSH2 0x11A3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120D DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1218 DUP4 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x11A3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH21 0xF2ED5F6DAF10C226AA3D48291AFB14022ADA6C30B3 0xBC 0xCF SGT PUSH28 0xCF87DDC28064736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "177:4007:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3611:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;952:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1163:410;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;872:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1047:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1579:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3469:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:81;731:13;763:5;756:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:81;:::o;3611:150::-;3678:4;3694:38;3703:10;3715:8;3725:6;3694:8;:38::i;:::-;3750:4;3743:11;;3611:150;;;;:::o;952:89::-;996:7;1022:12;;1015:19;;952:89;:::o;1163:410::-;1275:4;1291:12;1306:4;1291:19;;1334:10;1325:19;;:5;:19;;;1321:95;;1370:35;1386:5;1393:3;1398:6;1370:15;:35::i;:::-;1360:45;;1321:95;1430:7;1426:72;;;1453:34;1468:5;1475:3;1480:6;1453:14;:34::i;:::-;;1426:72;1529:3;1513:28;;1522:5;1513:28;;;1534:6;1513:28;;;;;;:::i;:::-;;;;;;;;1559:7;1552:14;;;1163:410;;;;;:::o;872:74::-;913:5;937:2;930:9;;872:74;:::o;1047:110::-;1105:7;1131:9;:19;1141:8;1131:19;;;;;;;;;;;;;;;;1124:26;;1047:110;;;:::o;781:85::-;820:13;852:7;845:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;781:85;:::o;1579:141::-;1642:4;1658:34;1668:10;1680:3;1685:6;1658:9;:34::i;:::-;1709:4;1702:11;;1579:141;;;;:::o;3469:136::-;3543:7;3569:11;:19;3581:6;3569:19;;;;;;;;;;;;;;;:29;3589:8;3569:29;;;;;;;;;;;;;;;;3562:36;;3469:136;;;;:::o;3767:415::-;3908:1;3888:22;;:8;:22;;;3884:91;;3955:8;3933:31;;;;;;;;;;;:::i;:::-;;;;;;;;3884:91;4007:1;3989:20;;:6;:20;;;3985:85;;4052:6;4032:27;;;;;;;;;;;:::i;:::-;;;;;;;;3985:85;4115:6;4079:11;:23;4091:10;4079:23;;;;;;;;;;;;;;;:33;4103:8;4079:33;;;;;;;;;;;;;;;:42;;;;4158:8;4137:38;;4146:10;4137:38;;;4168:6;4137:38;;;;;;:::i;:::-;;;;;;;;3767:415;;;:::o;2416:511::-;2532:4;2569:1;2552:19;;:5;:19;;;2548:84;;2615:5;2594:27;;;;;;;;;;;:::i;:::-;;;;;;;;2548:84;2661:1;2646:17;;:3;:17;;;2642:82;;2709:3;2686:27;;;;;;;;;;;:::i;:::-;;;;;;;;2642:82;2764:6;2738:11;:18;2750:5;2738:18;;;;;;;;;;;;;;;:23;2757:3;2738:23;;;;;;;;;;;;;;;;:32;2734:122;;;2813:5;2820:9;:16;2830:5;2820:16;;;;;;;;;;;;;;;;2838:6;2793:52;;;;;;;;;;;;;:::i;:::-;;;;;;;;2734:122;2893:6;2866:11;:18;2878:5;2866:18;;;;;;;;;;;;;;;:23;2885:3;2866:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2916:4;2909:11;;2416:511;;;;;:::o;2933:530::-;3048:4;3085:1;3068:19;;:5;:19;;;3064:84;;3131:5;3110:27;;;;;;;;;;;:::i;:::-;;;;;;;;3064:84;3177:1;3162:17;;:3;:17;;;3158:82;;3225:3;3202:27;;;;;;;;;;;:::i;:::-;;;;;;;;3158:82;3273:6;3254:9;:16;3264:5;3254:16;;;;;;;;;;;;;;;;:25;3250:115;;;3322:5;3329:9;:16;3339:5;3329:16;;;;;;;;;;;;;;;;3347:6;3302:52;;;;;;;;;;;;;:::i;:::-;;;;;;;;3250:115;3395:6;3375:9;:16;3385:5;3375:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;3429:6;3411:9;:14;3421:3;3411:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;3452:4;3445:11;;2933:530;;;;;:::o;1726:332::-;1859:1;1842:19;;:5;:19;;;1838:84;;1905:5;1884:27;;;;;;;;;;;:::i;:::-;;;;;;;;1838:84;1951:1;1936:17;;:3;:17;;;1932:82;;1999:3;1976:27;;;;;;;;;;;:::i;:::-;;;;;;;;1932:82;2024:27;2032:5;2039:3;2044:6;2024:7;:27::i;:::-;1726:332;;;:::o;2064:346::-;2197:6;2178:9;:16;2188:5;2178:16;;;;;;;;;;;;;;;;:25;2174:115;;;2246:5;2253:9;:16;2263:5;2253:16;;;;;;;;;;;;;;;;2271:6;2226:52;;;;;;;;;;;;;:::i;:::-;;;;;;;;2174:115;2319:6;2299:9;:16;2309:5;2299:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;2353:6;2335:9;:14;2345:3;2335:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2391:3;2375:28;;2384:5;2375:28;;;2396:6;2375:28;;;;;;:::i;:::-;;;;;;;;2064:346;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:118::-;6160:24;6178:5;6160:24;:::i;:::-;6155:3;6148:37;6073:118;;:::o;6197:222::-;6290:4;6328:2;6317:9;6313:18;6305:26;;6341:71;6409:1;6398:9;6394:17;6385:6;6341:71;:::i;:::-;6197:222;;;;:::o;6425:442::-;6574:4;6612:2;6601:9;6597:18;6589:26;;6625:71;6693:1;6682:9;6678:17;6669:6;6625:71;:::i;:::-;6706:72;6774:2;6763:9;6759:18;6750:6;6706:72;:::i;:::-;6788;6856:2;6845:9;6841:18;6832:6;6788:72;:::i;:::-;6425:442;;;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:194;7099:4;7119:20;7137:1;7119:20;:::i;:::-;7114:25;;7153:20;7171:1;7153:20;:::i;:::-;7148:25;;7197:1;7194;7190:9;7182:17;;7221:1;7215:4;7212:11;7209:37;;;7226:18;;:::i;:::-;7209:37;7059:194;;;;:::o;7259:191::-;7299:3;7318:20;7336:1;7318:20;:::i;:::-;7313:25;;7352:20;7370:1;7352:20;:::i;:::-;7347:25;;7395:1;7392;7388:9;7381:16;;7416:3;7413:1;7410:10;7407:36;;;7423:18;;:::i;:::-;7407:36;7259:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "943200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "338",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite",
								"updateAllowance(address,address,uint256)": "infinite",
								"updateBalances(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 439,
									"end": 688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 439,
									"end": 688,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 565,
									"end": 570,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 557,
									"end": 562,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 557,
									"end": 570,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 557,
									"end": 570,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 557,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 557,
									"end": 570,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 557,
									"end": 570,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 557,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 557,
									"end": 570,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 557,
									"end": 570,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 557,
									"end": 570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 557,
									"end": 570,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 597,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 587,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 580,
									"end": 597,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 597,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 580,
									"end": 597,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 597,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 580,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 580,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 580,
									"end": 597,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 608,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 635,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 608,
									"end": 635,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 608,
									"end": 635,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 608,
									"end": 635,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 669,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 669,
									"end": 681,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 654,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 645,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 655,
									"end": 665,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 645,
									"end": 666,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 645,
									"end": 666,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 645,
									"end": 666,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 645,
									"end": 666,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 666,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 645,
									"end": 681,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 681,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 645,
									"end": 681,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 439,
									"end": 688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3103,
									"end": 3105,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3091,
									"end": 3100,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3089,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3101,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3106,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3109,
									"end": 3188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3251,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3239,
									"end": 3248,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3235,
									"end": 3252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3280,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3272,
									"end": 3278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3299,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3302,
									"end": 3381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3464,
									"end": 3470,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3462,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3449,
									"end": 3471,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3407,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3553,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3549,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3555,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3601,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3604,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3775,
									"end": 3782,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3766,
									"end": 3772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3764,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3751,
									"end": 3773,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3709,
									"end": 3783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3501,
									"end": 3793,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3832,
									"end": 3834,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3914,
									"end": 3921,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3903,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3858,
									"end": 3922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4036,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4025,
									"end": 4037,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4175,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4095,
									"end": 4096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4088,
									"end": 4176,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4192,
									"end": 4193,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4185,
									"end": 4200,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4223,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4216,
									"end": 4217,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4209,
									"end": 4224,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4280,
									"end": 4286,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4318,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4311,
									"end": 4315,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4319,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4358,
									"end": 4362,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4354,
									"end": 4366,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4385,
									"end": 4403,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4441,
									"end": 4445,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4433,
									"end": 4439,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4429,
									"end": 4446,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4503,
									"end": 4505,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4495,
									"end": 4501,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4492,
									"end": 4506,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4472,
									"end": 4490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4469,
									"end": 4507,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 4522,
									"end": 4540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4634,
									"end": 4637,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4657,
									"end": 4660,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4654,
									"end": 4655,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4647,
									"end": 4661,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4691,
									"end": 4695,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4688,
									"end": 4689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4678,
									"end": 4696,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4746,
									"end": 4752,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4793,
									"end": 4795,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4788,
									"end": 4790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4781,
									"end": 4786,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4777,
									"end": 4791,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4773,
									"end": 4796,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4852,
									"end": 4860,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4902,
									"end": 4907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4896,
									"end": 4900,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 4908,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4990,
									"end": 4996,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5040,
									"end": 5041,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 5038,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5024,
									"end": 5042,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 5093,
									"end": 5159,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5082,
									"end": 5091,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5063,
									"end": 5160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5211,
									"end": 5219,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5200,
									"end": 5209,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5181,
									"end": 5220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5253,
									"end": 5257,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5249,
									"end": 5258,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5242,
									"end": 5247,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5238,
									"end": 5259,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5302,
									"end": 5306,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5292,
									"end": 5300,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5288,
									"end": 5307,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5278,
									"end": 5308,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5348,
									"end": 5351,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5369,
									"end": 5374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5436,
									"end": 5445,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5514,
									"end": 5519,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 5496,
									"end": 5520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 5487,
									"end": 5521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 5469,
									"end": 5522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5577,
									"end": 5580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5598,
									"end": 5603,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5756,
									"end": 5763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5725,
									"end": 5764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5859,
									"end": 5875,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5835,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5827,
									"end": 5833,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 5824,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5814,
									"end": 5825,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 5786,
									"end": 5877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5773,
									"end": 5878,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5691,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5935,
									"end": 5938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 6046,
									"end": 6078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 6145,
									"end": 6151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6131,
									"end": 6135,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 6087,
									"end": 6152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6022,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6241,
									"end": 6244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6234,
									"end": 6239,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6231,
									"end": 6245,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6332,
									"end": 6333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6330,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 6295,
									"end": 6334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6268,
									"end": 6269,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6261,
									"end": 6266,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6257,
									"end": 6270,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6457,
									"end": 6459,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6452,
									"end": 6455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6449,
									"end": 6460,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6523,
									"end": 6528,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 6491,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6593,
									"end": 6603,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 6575,
									"end": 6604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6565,
									"end": 6573,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6561,
									"end": 6605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6746,
									"end": 6756,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6787,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6876,
									"end": 6879,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 6858,
									"end": 6880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6848,
									"end": 6856,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6844,
									"end": 6881,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6831,
									"end": 6842,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 6802,
									"end": 6882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6959,
									"end": 6967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7009,
									"end": 7014,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7003,
									"end": 7007,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7015,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7153,
									"end": 7154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7149,
									"end": 7155,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7141,
									"end": 7146,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7134,
									"end": 7147,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 7105,
									"end": 7156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7157,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7186,
									"end": 7190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7180,
									"end": 7184,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7176,
									"end": 7191,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7079,
									"end": 7197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7278,
									"end": 7282,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 7449,
									"end": 7452,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7424,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7486,
									"end": 7489,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7483,
									"end": 7484,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7479,
									"end": 7490,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7473,
									"end": 7477,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7491,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7652,
									"end": 7655,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 7619,
									"end": 7656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7721,
									"end": 7739,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7713,
									"end": 7719,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7710,
									"end": 7740,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 7743,
									"end": 7761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7819,
									"end": 7823,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7813,
									"end": 7824,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7932,
									"end": 7938,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7918,
									"end": 7922,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7872,
									"end": 7939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 7967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7990,
									"end": 7994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8022,
									"end": 8024,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8014,
									"end": 8020,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8011,
									"end": 8025,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8039,
									"end": 8040,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8696,
									"end": 8697,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8757,
									"end": 8760,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8753,
									"end": 8772,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8747,
									"end": 8773,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 8873,
									"end": 8879,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8866,
									"end": 8871,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 8813,
									"end": 8880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8807,
									"end": 8811,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8800,
									"end": 8881,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8669,
									"end": 8891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8082,
									"end": 8091,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8074,
									"end": 8080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8070,
									"end": 8092,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 8120,
									"end": 8157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8179,
									"end": 8180,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8207,
									"end": 8214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8204,
									"end": 8205,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8215,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8295,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8281,
									"end": 8284,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8277,
									"end": 8296,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8271,
									"end": 8297,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8263,
									"end": 8269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8298,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8337,
									"end": 8338,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8329,
									"end": 8335,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8325,
									"end": 8339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8386,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8373,
									"end": 8382,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8387,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8230,
									"end": 8234,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8227,
									"end": 8228,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8223,
									"end": 8235,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8429,
									"end": 8435,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8420,
									"end": 8427,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8417,
									"end": 8436,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8487,
									"end": 8496,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8482,
									"end": 8485,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8478,
									"end": 8497,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8472,
									"end": 8498,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8572,
									"end": 8576,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8564,
									"end": 8570,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8560,
									"end": 8577,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8558,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8530,
									"end": 8578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8522,
									"end": 8528,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8515,
									"end": 8579,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8437,
									"end": 8593,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8639,
									"end": 8640,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8635,
									"end": 8636,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8627,
									"end": 8633,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8623,
									"end": 8637,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8619,
									"end": 8641,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8613,
									"end": 8617,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8606,
									"end": 8642,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 4184,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a74f2ed5f6daf10c226aa3d48291afb14022ada6c30b3bccf137bcf87ddc28064736f6c634300081a0033",
									".code": [
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 177,
											"end": 4184,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 694,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 694,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3611,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3611,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 952,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 952,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1163,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1163,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1163,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 872,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 872,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1047,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1047,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 781,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 781,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1579,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1579,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1579,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3469,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3469,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3469,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 694,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 731,
											"end": 744,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 756,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 756,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 756,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 756,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3703,
											"end": 3713,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3694,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3732,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3694,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3754,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3743,
											"end": 3754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 3754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1344,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1344,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1344,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1344,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1344,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1321,
											"end": 1416,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1396,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1370,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1405,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1416,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1321,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1498,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1426,
											"end": 1498,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1468,
											"end": 1473,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1478,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1453,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1487,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1453,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1426,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1513,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 872,
											"end": 946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1149,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 781,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 833,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 852,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 845,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 845,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 845,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1668,
											"end": 1678,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1691,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1658,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3580,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3597,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 4182,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3767,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3884,
											"end": 3975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "A1CB865900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3933,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3964,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3975,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3884,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3985,
											"end": 4070,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "PUSH",
											"source": 5,
											"value": "1E4F95400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4032,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4059,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4070,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3985,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4101,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4102,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4111,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4112,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4121,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4156,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4137,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4175,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 4182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 4182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 4182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2548,
											"end": 2632,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "69EC708200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2594,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2632,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2548,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2642,
											"end": 2724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "4A149D0800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2686,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2724,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2642,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2749,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2760,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2856,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2734,
											"end": 2856,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2818,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2835,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "DB42144D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2793,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2734,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2877,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2883,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2888,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2866,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2909,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 2920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3064,
											"end": 3148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "69EC708200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3110,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3064,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3158,
											"end": 3240,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "4A149D0800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3202,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3229,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3240,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3158,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3270,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3279,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3365,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3250,
											"end": 3365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3344,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "DB42144D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3302,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3365,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3250,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3375,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3411,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3456,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3445,
											"end": 3456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2058,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1726,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1838,
											"end": 1922,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "69EC708200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1884,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1911,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1922,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1838,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1932,
											"end": 2014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "4A149D0800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1976,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 2014,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1932,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2032,
											"end": 2037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2024,
											"end": 2051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2410,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2064,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2187,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2193,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "PUSH",
											"source": 5,
											"value": "DB42144D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2226,
											"end": 2278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2278,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2299,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2335,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2396,
											"end": 2402,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2375,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6160,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6197,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6341,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6412,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6341,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6625,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6756,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6706,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6838,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6788,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7253,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7059,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7119,
											"end": 7139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7139,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7119,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7153,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7173,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7153,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7221,
											"end": 7222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7212,
											"end": 7223,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7209,
											"end": 7246,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7209,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7209,
											"end": 7246,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 7226,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7226,
											"end": 7244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7244,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 7226,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7209,
											"end": 7246,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7209,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7253,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7450,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7259,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7336,
											"end": 7337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7318,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7338,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7318,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7352,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7370,
											"end": 7371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7352,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7352,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7352,
											"end": 7372,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7352,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7420,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7443,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7407,
											"end": 7443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7423,
											"end": 7441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7443,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7407,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7450,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7450,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/BigBawlsToken.sol",
								"contracts/interfaces/IBigBawlsTokenError.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowanceBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowances\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"InvalidOwnerAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"InvalidReceiverAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"InvalidSenderAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"InvalidSpenderAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BigBawlsToken.sol\":\"BigBawls\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BigBawlsToken.sol\":{\"keccak256\":\"0x1294574af847f2681c1e52e78f256b9eb817070edec902cd420f0f9dd02099b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59d42486344724f4e9a9f144024aae6b63c908f7129c3d3a292ebc05f81d6ad3\",\"dweb:/ipfs/QmWz9BwFd8ri2mCQMHUq5xt4LUP4oTZiwrhHqntF8LYjLL\"]},\"contracts/interfaces/IBigBawlsTokenError.sol\":{\"keccak256\":\"0x5daa75aa3e09fe8c21a4471a06f0bb62933432de8b0262dbc732836862458139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73249e19e65d82ea4ab69f2a17d58efaa9a3bf274735ae2f8ac923683095cc1b\",\"dweb:/ipfs/QmNT2yP6Bsj7dQ7HpG6iwpLPEtC21ajE7D2oe9ZXAU6YTH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 795,
								"contract": "contracts/BigBawlsToken.sol:BigBawls",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 797,
								"contract": "contracts/BigBawlsToken.sol:BigBawls",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 799,
								"contract": "contracts/BigBawlsToken.sol:BigBawls",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 803,
								"contract": "contracts/BigBawlsToken.sol:BigBawls",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 809,
								"contract": "contracts/BigBawlsToken.sol:BigBawls",
								"label": "_allowances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IBigBawlsTokenError.sol": {
				"IBigBawlsTokenErrors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowanceBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowances",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "InvalidOwnerAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "InvalidReceiverAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "InvalidSenderAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "InvalidSpenderAddress",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowanceBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowances\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"InvalidOwnerAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"InvalidReceiverAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"InvalidSenderAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"InvalidSpenderAddress\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBigBawlsTokenError.sol\":\"IBigBawlsTokenErrors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBigBawlsTokenError.sol\":{\"keccak256\":\"0x5daa75aa3e09fe8c21a4471a06f0bb62933432de8b0262dbc732836862458139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73249e19e65d82ea4ab69f2a17d58efaa9a3bf274735ae2f8ac923683095cc1b\",\"dweb:/ipfs/QmNT2yP6Bsj7dQ7HpG6iwpLPEtC21ajE7D2oe9ZXAU6YTH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/BigBawlsToken.sol": {
				"ast": {
					"absolutePath": "contracts/BigBawlsToken.sol",
					"exportedSymbols": {
						"BigBawls": [
							1245
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IBigBawlsTokenErrors": [
							1282
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1246,
							"sourceUnit": 652,
							"src": "65:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IBigBawlsTokenError.sol",
							"file": "contracts/interfaces/IBigBawlsTokenError.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1246,
							"sourceUnit": 1283,
							"src": "121:54:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "IERC20",
										"nameLocations": [
											"198:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "198:6:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "198:6:5"
								},
								{
									"baseName": {
										"id": 792,
										"name": "IBigBawlsTokenErrors",
										"nameLocations": [
											"206:20:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1282,
										"src": "206:20:5"
									},
									"id": 793,
									"nodeType": "InheritanceSpecifier",
									"src": "206:20:5"
								}
							],
							"canonicalName": "BigBawls",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1245,
							"linearizedBaseContracts": [
								1245,
								1282,
								729
							],
							"name": "BigBawls",
							"nameLocation": "186:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "241:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1245,
									"src": "233:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 797,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "274:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1245,
									"src": "259:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 796,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "259:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "300:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1245,
									"src": "285:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 798,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "285:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "350:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1245,
									"src": "314:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 802,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "322:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "314:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 801,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 809,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "421:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1245,
									"src": "365:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 808,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 804,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "373:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "365:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 807,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 805,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "384:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 806,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "403:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "547:141:5",
										"statements": [
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "557:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 819,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "565:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "557:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "557:13:5"
											},
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 822,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "580:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 823,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "590:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "580:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "580:17:5"
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "608:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "608:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "608:27:5"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 830,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "645:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 833,
														"indexExpression": {
															"expression": {
																"id": 831,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "655:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "659:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "655:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "645:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 834,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "669:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "645:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "645:36:5"
											}
										]
									},
									"id": 838,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "474:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "460:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "460:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "503:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "489:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "489:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "528:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "520:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:96:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "547:0:5"
									},
									"scope": 1245,
									"src": "439:249:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "746:29:5",
										"statements": [
											{
												"expression": {
													"id": 843,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 797,
													"src": "763:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 842,
												"id": 844,
												"nodeType": "Return",
												"src": "756:12:5"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "703:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "731:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "731:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:15:5"
									},
									"scope": 1245,
									"src": "694:81:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "835:31:5",
										"statements": [
											{
												"expression": {
													"id": 851,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 799,
													"src": "852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 850,
												"id": 852,
												"nodeType": "Return",
												"src": "845:14:5"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "790:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "820:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 848,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "820:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:15:5"
									},
									"scope": 1245,
									"src": "781:85:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "920:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "937:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 858,
												"id": 860,
												"nodeType": "Return",
												"src": "930:9:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "881:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "913:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 856,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "913:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:7:5"
									},
									"scope": 1245,
									"src": "872:74:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1005:36:5",
										"statements": [
											{
												"expression": {
													"id": 867,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "1022:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 866,
												"id": 868,
												"nodeType": "Return",
												"src": "1015:19:5"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "961:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:2:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "996:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:9:5"
									},
									"scope": 1245,
									"src": "952:89:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "1114:43:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 877,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1131:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 879,
													"indexExpression": {
														"id": 878,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1141:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1131:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 880,
												"nodeType": "Return",
												"src": "1124:26:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1056:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1074:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1066:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:18:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1105:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:9:5"
									},
									"scope": 1245,
									"src": "1047:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1281:292:5",
										"statements": [
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1296:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "1291:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 893,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1291:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"hexValue": "74727565",
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1306:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1291:19:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1325:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 898,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1334:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1338:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1334:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1325:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "1321:95:5",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "1346:70:5",
													"statements": [
														{
															"expression": {
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 901,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "1360:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 903,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "1386:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 904,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 886,
																			"src": "1393:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 905,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "1398:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 902,
																		"name": "updateAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "1370:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1370:35:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1360:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 908,
															"nodeType": "ExpressionStatement",
															"src": "1360:45:5"
														}
													]
												}
											},
											{
												"condition": {
													"id": 911,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 894,
													"src": "1430:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "1426:72:5",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "1439:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 913,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "1468:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 914,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "1475:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 915,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "1480:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 912,
																	"name": "updateBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "1453:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) returns (bool)"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1453:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 917,
															"nodeType": "ExpressionStatement",
															"src": "1453:34:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 921,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "1522:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1529:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "1534:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1513:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "EmitStatement",
												"src": "1508:33:5"
											},
											{
												"expression": {
													"id": 926,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 894,
													"src": "1559:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 892,
												"id": 927,
												"nodeType": "Return",
												"src": "1552:14:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1172:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1202:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1194:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1225:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1217:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1246:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1238:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:74:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1275:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:5"
									},
									"scope": 1245,
									"src": "1163:410:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "1648:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1668:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1672:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1668:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "1680:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "1685:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "1658:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "1658:34:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1709:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 937,
												"id": 946,
												"nodeType": "Return",
												"src": "1702:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1588:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1605:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1597:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1618:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1610:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:29:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1642:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1642:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1641:6:5"
									},
									"scope": 1245,
									"src": "1579:141:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "1828:230:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1842:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1859:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1851:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1851:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1851:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1842:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "1838:84:5",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "1863:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 964,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "1905:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 963,
																	"name": "InvalidSenderAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "1884:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1884:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 966,
															"nodeType": "RevertStatement",
															"src": "1877:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1936:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1951:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1943:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 970,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1943:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1943:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1936:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "1932:82:5",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "1955:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 976,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "1999:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 975,
																	"name": "InvalidReceiverAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "1976:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1976:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 978,
															"nodeType": "RevertStatement",
															"src": "1969:34:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2032:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2039:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "2044:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2024:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "2024:27:5"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1735:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1762:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1754:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1785:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1777:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1806:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1798:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:74:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:0:5"
									},
									"scope": 1245,
									"src": "1726:332:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "2164:246:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 997,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2178:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 999,
														"indexExpression": {
															"id": 998,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2188:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2178:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1000,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2197:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2178:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "IfStatement",
												"src": "2174:115:5",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "2205:84:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "2246:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1004,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "2253:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1006,
																		"indexExpression": {
																			"id": 1005,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "2263:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2253:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "2271:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2226:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2226:52:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1009,
															"nodeType": "RevertStatement",
															"src": "2219:59:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1012,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2299:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1014,
														"indexExpression": {
															"id": 1013,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2309:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2299:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1015,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2319:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2299:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "2299:26:5"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1018,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2335:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1020,
														"indexExpression": {
															"id": 1019,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2345:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2335:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1021,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2353:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2335:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "2335:24:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1025,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2384:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2391:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "2396:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1024,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2375:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "EmitStatement",
												"src": "2370:33:5"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2073:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2098:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2090:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2121:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2113:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2142:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2134:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:74:5"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2164:0:5"
									},
									"scope": 1245,
									"src": "2064:346:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "2538:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "2552:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2569:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2561:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2561:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2561:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2552:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "2548:84:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "2573:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "2615:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1048,
																	"name": "InvalidSenderAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "2594:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2594:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "2587:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "2646:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1055,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2646:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "2642:82:5",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "2665:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1061,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "2709:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1060,
																	"name": "InvalidReceiverAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "2686:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2686:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "2679:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1066,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "2738:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1068,
															"indexExpression": {
																"id": 1067,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "2750:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2738:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1070,
														"indexExpression": {
															"id": 1069,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2757:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2738:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1071,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "2764:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2738:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "2734:122:5",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "2772:84:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1074,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "2813:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1075,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "2820:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1077,
																		"indexExpression": {
																			"id": 1076,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1033,
																			"src": "2830:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2820:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1078,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "2838:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1073,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2793:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2793:52:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "2786:59:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1083,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "2866:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1086,
															"indexExpression": {
																"id": 1084,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "2878:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2866:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"id": 1085,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2885:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2866:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1088,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "2893:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2866:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2866:33:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2916:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1041,
												"id": 1092,
												"nodeType": "Return",
												"src": "2909:11:5"
											}
										]
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAllowance",
									"nameLocation": "2425:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2458:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2450:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2481:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2473:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2502:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2494:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:74:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2532:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2532:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2531:6:5"
									},
									"scope": 1245,
									"src": "2416:511:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "3054:409:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1105,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "3068:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3085:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3077:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1106,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3077:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3077:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3068:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "3064:84:5",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "3089:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1112,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "3131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1111,
																	"name": "InvalidSenderAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "3110:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3110:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1114,
															"nodeType": "RevertStatement",
															"src": "3103:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "3162:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3162:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "3158:82:5",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "3181:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1124,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "3225:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1123,
																	"name": "InvalidReceiverAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "3202:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "3195:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1129,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3254:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1131,
														"indexExpression": {
															"id": 1130,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "3264:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3254:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1132,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "3273:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3254:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "3250:115:5",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "3281:84:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1135,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "3322:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1136,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "3329:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1138,
																		"indexExpression": {
																			"id": 1137,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "3339:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3329:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1139,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "3347:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1134,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "3302:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3302:52:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1141,
															"nodeType": "RevertStatement",
															"src": "3295:59:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1144,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3375:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1146,
														"indexExpression": {
															"id": 1145,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "3385:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3375:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1147,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "3395:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3375:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "3375:26:5"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1150,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3411:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1152,
														"indexExpression": {
															"id": 1151,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "3421:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1153,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "3429:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3411:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "3411:24:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3452:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1104,
												"id": 1157,
												"nodeType": "Return",
												"src": "3445:11:5"
											}
										]
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateBalances",
									"nameLocation": "2942:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2974:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2966:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2997:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2989:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3018:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3010:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:74:5"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3048:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3048:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:6:5"
									},
									"scope": 1245,
									"src": "2933:530:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "3552:53:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1168,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3569:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1170,
														"indexExpression": {
															"id": 1169,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "3581:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3569:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1172,
													"indexExpression": {
														"id": 1171,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3589:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3569:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1173,
												"nodeType": "Return",
												"src": "3562:36:5"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3478:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "3512:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3504:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:34:5"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3543:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:9:5"
									},
									"scope": 1245,
									"src": "3469:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "3684:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3703:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3707:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3703:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "3715:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3725:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1184,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "3694:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3694:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "3694:38:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3750:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1183,
												"id": 1192,
												"nodeType": "Return",
												"src": "3743:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3620:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "3636:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3628:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3654:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:34:5"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3678:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3678:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:6:5"
									},
									"scope": 1245,
									"src": "3611:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "3874:308:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "3888:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3908:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1204,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3900:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3900:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3888:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "3884:91:5",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "3912:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1210,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "3955:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1209,
																	"name": "InvalidSpenderAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "3933:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3933:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1212,
															"nodeType": "RevertStatement",
															"src": "3926:38:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "3989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4007:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3999:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3999:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3999:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3989:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "3985:85:5",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "4011:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1222,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "4052:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "InvalidOwnerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "4032:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1224,
															"nodeType": "RevertStatement",
															"src": "4025:34:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1227,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "4079:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1231,
															"indexExpression": {
																"expression": {
																	"id": 1228,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4091:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4095:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4091:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4079:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1232,
														"indexExpression": {
															"id": 1230,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "4103:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4079:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1233,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "4115:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4079:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "4079:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4146:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4150:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4146:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "4158:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "4168:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1236,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "4137:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4137:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "EmitStatement",
												"src": "4132:43:5"
											}
										]
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "3776:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3802:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3794:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "3826:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3818:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3818:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3852:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3844:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3784:80:5"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3874:0:5"
									},
									"scope": 1245,
									"src": "3767:415:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1246,
							"src": "177:4007:5",
							"usedErrors": [
								1251,
								1255,
								1259,
								1263,
								1271,
								1281
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "0:4185:5"
				},
				"id": 5
			},
			"contracts/interfaces/IBigBawlsTokenError.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IBigBawlsTokenError.sol",
					"exportedSymbols": {
						"IBigBawlsTokenErrors": [
							1282
						]
					},
					"id": 1283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBigBawlsTokenErrors",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1282,
							"linearizedBaseContracts": [
								1282
							],
							"name": "IBigBawlsTokenErrors",
							"nameLocation": "75:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "69ec7082",
									"id": 1251,
									"name": "InvalidSenderAddress",
									"nameLocation": "108:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "137:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "129:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:16:6"
									},
									"src": "102:43:6"
								},
								{
									"errorSelector": "4a149d08",
									"id": 1255,
									"name": "InvalidReceiverAddress",
									"nameLocation": "157:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "188:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "180:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:18:6"
									},
									"src": "151:47:6"
								},
								{
									"errorSelector": "01e4f954",
									"id": 1259,
									"name": "InvalidOwnerAddress",
									"nameLocation": "210:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "238:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "230:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:18:6"
									},
									"src": "204:44:6"
								},
								{
									"errorSelector": "a1cb8659",
									"id": 1263,
									"name": "InvalidSpenderAddress",
									"nameLocation": "260:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "290:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "282:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:17:6"
									},
									"src": "254:45:6"
								},
								{
									"errorSelector": "db42144d",
									"id": 1271,
									"name": "InsufficientBalance",
									"nameLocation": "311:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "339:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "331:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "357:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "349:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "374:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "366:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:53:6"
									},
									"src": "305:79:6"
								},
								{
									"errorSelector": "26f56f48",
									"id": 1281,
									"name": "InsufficientAllowances",
									"nameLocation": "396:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "427:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "419:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "443:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "435:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "allowanceBalance",
												"nameLocation": "461:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "453:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "487:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "479:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:78:6"
									},
									"src": "390:107:6"
								}
							],
							"scope": 1283,
							"src": "65:434:6",
							"usedErrors": [
								1251,
								1255,
								1259,
								1263,
								1271,
								1281
							],
							"usedEvents": []
						}
					],
					"src": "0:500:6"
				},
				"id": 6
			}
		}
	}
}